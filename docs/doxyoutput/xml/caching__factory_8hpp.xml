<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="caching__factory_8hpp" kind="file" language="C++">
    <compoundname>caching_factory.hpp</compoundname>
    <includes local="no">map</includes>
    <includes local="no">string</includes>
    <includes local="no">memory</includes>
    <includes local="no">utility</includes>
    <includes refid="rcppsw_8hpp" local="yes">rcppsw/rcppsw.hpp</includes>
    <includes refid="factory_8hpp" local="yes">rcppsw/patterns/factory/factory.hpp</includes>
    <includedby refid="rngm_8hpp" local="yes">/home/jharwell/git/rcppsw/include/rcppsw/math/rngm.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/jharwell/git/rcppsw/include/rcppsw/patterns/prototype/caching_factory.hpp</label>
        <link refid="caching__factory_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>rcsw/common/common.h</label>
        <link refid="common_8h.html" external="/home/jharwell/git/rcppsw/build/docs/rcsw/RCSW.tag"/>
      </node>
      <node id="7">
        <label>rcppsw/common/common.hpp</label>
        <link refid="common_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="2">
        <label>map</label>
      </node>
      <node id="6">
        <label>rcppsw/rcppsw.hpp</label>
        <link refid="rcppsw_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>rcppsw/mpl/mpl.hpp</label>
        <link refid="mpl_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>rcppsw/patterns/factory/base_factory.hpp</label>
        <link refid="base__factory_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
      <node id="5">
        <label>utility</label>
      </node>
      <node id="9">
        <label>rcppsw/common/macros.hpp</label>
        <link refid="common_2macros_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>rcppsw/patterns/factory/factory.hpp</label>
        <link refid="factory_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/home/jharwell/git/rcppsw/include/rcppsw/patterns/prototype/caching_factory.hpp</label>
        <link refid="caching__factory_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/jharwell/git/rcppsw/include/rcppsw/math/rngm.hpp</label>
        <link refid="rngm_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classrcppsw_1_1patterns_1_1prototype_1_1caching__factory" prot="public">rcppsw::patterns::prototype::caching_factory</innerclass>
    <innernamespace refid="namespacercppsw">rcppsw</innernamespace>
    <innernamespace refid="namespacercppsw_1_1patterns">rcppsw::patterns</innernamespace>
    <innernamespace refid="namespacercppsw_1_1patterns_1_1prototype">rcppsw::patterns::prototype</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>2019 John Harwell, All rights reserved.</para>
</simplesect>
This file is part of RCPPSW.</para>
<para>RCPPSW is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.</para>
<para>RCPPSW is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</para>
<para>You should have received a copy of the GNU General Public License along with RCPPSW. If not, see &lt;<ulink url="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</ulink> </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="21"><highlight class="preprocessor">#ifndef<sp/>INCLUDE_RCPPSW_PATTERNS_PROTOTYPE_CACHING_FACTORY_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDE_RCPPSW_PATTERNS_PROTOTYPE_CACHING_FACTORY_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>Includes</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rcppsw_8hpp" kindref="compound">rcppsw/rcppsw.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="factory_8hpp" kindref="compound">rcppsw/patterns/factory/factory.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>Namespaces/Decls</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="namespacercppsw_1_1patterns_1_1prototype" refkind="compound"><highlight class="normal"><ref refid="common_2macros_8hpp_1a553c4f9d95d9ac867c32675925e86368" kindref="member">NS_START</ref>(<ref refid="namespacercppsw" kindref="compound">rcppsw</ref>,<sp/>patterns,<sp/>prototype);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>Class<sp/>Definitions</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>******************************************************************************/</highlight></codeline>
<codeline lineno="58"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TBase,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...Args&gt;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrcppsw_1_1patterns_1_1prototype_1_1caching__factory" kindref="compound">caching_factory</ref><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TDerived&gt;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>register_type(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="63" refid="classrcppsw_1_1patterns_1_1prototype_1_1caching__factory" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/>m_factory.template<sp/>register_type&lt;TDerived&gt;(name);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classrcppsw_1_1patterns_1_1prototype_1_1caching__factory_1afc718b5957ca25141ce476ad792f5ce2" refkind="member"><highlight class="normal"><sp/><sp/>TBase*<sp/>create(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/>Args...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_objs.find(name);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_objs.end()<sp/>==<sp/>it)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;TBase&gt;<sp/>created<sp/>=<sp/>m_factory.create(name,</highlight></codeline>
<codeline lineno="70" refid="classrcppsw_1_1patterns_1_1prototype_1_1caching__factory_1a4bab8f07f5cf01ee0652c3c3c42aba52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_objs.insert({name,<sp/>created.get()}).first-&gt;second;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>clang-format<sp/>off<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>patterns::factory::sharing_factory&lt;TBase,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string,<sp/></highlight><highlight class="comment">/*<sp/>key<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args...&gt;<sp/>m_factory{};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>TBase*&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_objs{};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>clang-format<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><ref refid="common_2macros_8hpp_1af6c55b58384045452cc8ce88f54e3265" kindref="member">NS_END</ref>(prototype,<sp/>patterns,<sp/><ref refid="namespacercppsw" kindref="compound">rcppsw</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDE_RCPPSW_PATTERNS_PROTOTYPE_CACHING_FACTORY_HPP_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/jharwell/git/rcppsw/include/rcppsw/patterns/prototype/caching_factory.hpp"/>
  </compounddef>
</doxygen>
