<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="type__uuid_8hpp" kind="file" language="C++">
    <compoundname>type_uuid.hpp</compoundname>
    <includes refid="rcppsw_8hpp" local="yes">rcppsw/rcppsw.hpp</includes>
    <includes refid="named__type_8hpp" local="yes">rcppsw/types/named_type.hpp</includes>
    <incdepgraph>
      <node id="5">
        <label>rcsw/common/common.h</label>
        <link refid="common_8h.html" external="/home/jharwell/git/rcppsw/build/docs/rcsw/RCSW.tag"/>
      </node>
      <node id="3">
        <label>rcppsw/common/common.hpp</label>
        <link refid="common_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="2">
        <label>rcppsw/rcppsw.hpp</label>
        <link refid="rcppsw_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>rcppsw/mpl/mpl.hpp</label>
        <link refid="mpl_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>rcppsw/er/stringizable.hpp</label>
        <link refid="stringizable_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>utility</label>
      </node>
      <node id="6">
        <label>rcppsw/common/macros.hpp</label>
        <link refid="common_2macros_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/jharwell/git/rcppsw/include/rcppsw/types/type_uuid.hpp</label>
        <link refid="type__uuid_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>rcppsw/types/named_type.hpp</label>
        <link refid="named__type_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>2019 John Harwell, All rights reserved.</para>
</simplesect>
This file is part of RCPPSW.</para>
<para>RCPPSW is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.</para>
<para>RCPPSW is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</para>
<para>You should have received a copy of the GNU General Public License along with RCPPSW. If not, see &lt;<ulink url="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</ulink> </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="21"><highlight class="preprocessor">#ifndef<sp/>INCLUDE_RCPPSW_TYPES_TYPE_UUID_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDE_RCPPSW_TYPES_TYPE_UUID_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>Includes</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rcppsw_8hpp" kindref="compound">rcppsw/rcppsw.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="named__type_8hpp" kindref="compound">rcppsw/types/named_type.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>Namespaces/Decls</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="common_2macros_8hpp_1a553c4f9d95d9ac867c32675925e86368" kindref="member">NS_START</ref>(<ref refid="namespacercppsw" kindref="compound">rcppsw</ref>,<sp/>types);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>Type<sp/>Definitions</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>******************************************************************************/</highlight></codeline>
<codeline lineno="50"><highlight class="keyword">class<sp/></highlight><highlight class="normal">type_uuid<sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classrcppsw_1_1types_1_1named__type" kindref="compound">rtypes::named_type</ref>&lt;int,<sp/>struct<sp/>type_uuid_tag&gt;<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>named_type&lt;int,<sp/>type_uuid_tag&gt;::named_type;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>type_uuid(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>type_uuid&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>type_uuid&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>type_uuid&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrcppsw_1_1types_1_1named__type_1ae3adaef7b9d236a163a83fdfc2e8a5c8" kindref="member">set</ref>(other.v());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>to<sp/>enable<sp/>use<sp/>in<sp/>\ref<sp/>std::map<sp/>and<sp/>the<sp/>like<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>type_uuid&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcppsw_1_1types_1_1named__type_1ab5e5d9c79710dbd92eea31dbe0357de5" kindref="member">v</ref>()<sp/>&lt;<sp/>other.v();<sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacercppsw_1_1math_1a53c97519cd1429ba1ea1ace8ba1e0a4c" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>type_uuid&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcppsw_1_1types_1_1named__type_1ab5e5d9c79710dbd92eea31dbe0357de5" kindref="member">v</ref>()<sp/>==<sp/>other.v();<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>type_uuid&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrcppsw_1_1types_1_1named__type_1ab5e5d9c79710dbd92eea31dbe0357de5" kindref="member">v</ref>()<sp/>!=<sp/>other.v();<sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="common_2macros_8hpp_1a553c4f9d95d9ac867c32675925e86368" kindref="member">NS_START</ref>(constants);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>type_uuid<sp/>kNoUUID;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><ref refid="common_2macros_8hpp_1af6c55b58384045452cc8ce88f54e3265" kindref="member">NS_END</ref>(constants,<sp/>types,<sp/><ref refid="namespacercppsw" kindref="compound">rcppsw</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDE_RCPPSW_TYPES_TYPE_UUID_HPP_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/type_uuid.hpp"/>
  </compounddef>
</doxygen>
