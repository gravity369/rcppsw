<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structrcppsw_1_1mpl_1_1can__static__cast" kind="struct" language="C++" prot="public">
    <compoundname>rcppsw::mpl::can_static_cast</compoundname>
    <basecompoundref prot="public" virt="non-virtual">false_type</basecompoundref>
    <includes refid="mpl_8hpp" local="no">mpl.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename U</type>
      </param>
      <param>
        <type>typename</type>
        <defval>void</defval>
      </param>
    </templateparamlist>
    <briefdescription>
<para>Determine if <computeroutput>T</computeroutput> can be cast to <computeroutput>U</computeroutput> via static_cast&lt;&gt;. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>false_type</label>
      </node>
      <node id="1">
        <label>rcppsw::mpl::can_static_cast&lt; T, U, typename &gt;</label>
        <link refid="structrcppsw_1_1mpl_1_1can__static__cast"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>false_type</label>
      </node>
      <node id="1">
        <label>rcppsw::mpl::can_static_cast&lt; T, U, typename &gt;</label>
        <link refid="structrcppsw_1_1mpl_1_1can__static__cast"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/jharwell/git/rcppsw/include/rcppsw/mpl/mpl.hpp" line="218" column="38" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/mpl/mpl.hpp" bodystart="218" bodyend="218"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
