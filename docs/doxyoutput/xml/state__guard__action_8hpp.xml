<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="state__guard__action_8hpp" kind="file" language="C++">
    <compoundname>state_guard_action.hpp</compoundname>
    <includes refid="event_8hpp" local="yes">rcppsw/patterns/fsm/event.hpp</includes>
    <includes refid="state__guard_8hpp" local="yes">rcppsw/patterns/fsm/state_guard.hpp</includes>
    <includedby refid="base__fsm_8hpp" local="yes">/home/jharwell/git/rcppsw/include/rcppsw/patterns/fsm/base_fsm.hpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>rcppsw/patterns/fsm/event.hpp</label>
        <link refid="event_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>rcsw/common/common.h</label>
        <link refid="common_8h.html" external="/home/jharwell/git/rcppsw/build/docs/rcsw/RCSW.tag"/>
      </node>
      <node id="4">
        <label>rcppsw/common/common.hpp</label>
        <link refid="common_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="3">
        <label>rcppsw/rcppsw.hpp</label>
        <link refid="rcppsw_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>rcppsw/mpl/mpl.hpp</label>
        <link refid="mpl_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>rcppsw/patterns/fsm/state_guard.hpp</label>
        <link refid="state__guard_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>rcppsw/common/macros.hpp</label>
        <link refid="common_2macros_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/jharwell/git/rcppsw/include/rcppsw/patterns/fsm/state_guard_action.hpp</label>
        <link refid="state__guard__action_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/home/jharwell/git/rcppsw/include/rcppsw/multithread/mt_fsm.hpp</label>
        <link refid="mt__fsm_8hpp"/>
      </node>
      <node id="4">
        <label>/home/jharwell/git/rcppsw/include/rcppsw/patterns/fsm/hfsm.hpp</label>
        <link refid="hfsm_8hpp"/>
      </node>
      <node id="5">
        <label>/home/jharwell/git/rcppsw/include/rcppsw/patterns/fsm/simple_fsm.hpp</label>
        <link refid="simple__fsm_8hpp"/>
      </node>
      <node id="1">
        <label>/home/jharwell/git/rcppsw/include/rcppsw/patterns/fsm/state_guard_action.hpp</label>
        <link refid="state__guard__action_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/jharwell/git/rcppsw/include/rcppsw/patterns/fsm/base_fsm.hpp</label>
        <link refid="base__fsm_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classrcppsw_1_1patterns_1_1fsm_1_1state__guard__condition0" prot="public">rcppsw::patterns::fsm::state_guard_condition0</innerclass>
    <innerclass refid="classrcppsw_1_1patterns_1_1fsm_1_1state__guard__condition1" prot="public">rcppsw::patterns::fsm::state_guard_condition1</innerclass>
    <innernamespace refid="namespacercppsw">rcppsw</innernamespace>
    <innernamespace refid="namespacercppsw_1_1patterns">rcppsw::patterns</innernamespace>
    <innernamespace refid="namespacercppsw_1_1patterns_1_1fsm">rcppsw::patterns::fsm</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>2017 John Harwell, All rights reserved.</para>
</simplesect>
This file is part of RCPPSW.</para>
<para>RCPPSW is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.</para>
<para>RCPPSW is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</para>
<para>You should have received a copy of the GNU General Public License along with RCPPSW. If not, see &lt;<ulink url="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</ulink> </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="21"><highlight class="preprocessor">#ifndef<sp/>INCLUDE_RCPPSW_PATTERNS_FSM_STATE_GUARD_ACTION_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDE_RCPPSW_PATTERNS_FSM_STATE_GUARD_ACTION_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>Includes</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="event_8hpp" kindref="compound">rcppsw/patterns/fsm/event.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="state__guard_8hpp" kindref="compound">rcppsw/patterns/fsm/state_guard.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>Namespaces/Decls</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="common_2macros_8hpp_1a553c4f9d95d9ac867c32675925e86368" kindref="member">NS_START</ref>(<ref refid="namespacercppsw" kindref="compound">rcppsw</ref>,<sp/>patterns,<sp/>fsm);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">base_fsm;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>Class<sp/>Definitions</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>******************************************************************************/</highlight></codeline>
<codeline lineno="50"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SM,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Event,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>(SM::*Func)(const<sp/>Event*)&gt;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">state_guard_condition1<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>state_guard<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>~state_guard_condition1(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classrcppsw_1_1patterns_1_1fsm_1_1state__guard__condition1" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>invoke_guard_condition(<ref refid="classrcppsw_1_1patterns_1_1fsm_1_1base__fsm" kindref="compound">base_fsm</ref>*<sp/>sm,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcppsw_1_1patterns_1_1fsm_1_1event__data" kindref="compound">event_data</ref>*<sp/>data)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>derived_fsm<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">SM*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sm);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Event*<sp/>derived_event<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="59" refid="classrcppsw_1_1patterns_1_1fsm_1_1state__guard__condition1_1a68932eb848f27d91363aed9ab0a4704a" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>!=<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>derived_event<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">Event*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(derived_event);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(derived_fsm-&gt;*Func)(derived_event);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SM,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>(SM::*Func)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)&gt;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">state_guard_condition0<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>state_guard<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>~state_guard_condition0(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classrcppsw_1_1patterns_1_1fsm_1_1state__guard__condition0" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>invoke_guard_condition(<ref refid="classrcppsw_1_1patterns_1_1fsm_1_1base__fsm" kindref="compound">base_fsm</ref>*<sp/>sm,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_2macros_8hpp_1a182007b022ff477677d33b31a89cb7fe" kindref="member">RCPPSW_UNUSED</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcppsw_1_1patterns_1_1fsm_1_1event__data" kindref="compound">event_data</ref>*)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>derived_fsm<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">SM*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sm);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(derived_fsm-&gt;*Func)();</highlight></codeline>
<codeline lineno="84" refid="classrcppsw_1_1patterns_1_1fsm_1_1state__guard__condition0_1a571228012b8298330b5cb12d282ee8a6" refkind="member"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><ref refid="common_2macros_8hpp_1af6c55b58384045452cc8ce88f54e3265" kindref="member">NS_END</ref>(fsm,<sp/>patterns,<sp/><ref refid="namespacercppsw" kindref="compound">rcppsw</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDE_RCPPSW_PATTERNS_FSM_STATE_GUARD_ACTION_HPP_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/jharwell/git/rcppsw/include/rcppsw/patterns/fsm/state_guard_action.hpp"/>
  </compounddef>
</doxygen>
