<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster" kind="class" language="C++" prot="public">
    <compoundname>rcppsw::algorithm::clustering::eh_cluster</compoundname>
    <includes refid="cluster_8hpp" local="no">cluster.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename Policy</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1a81cbbc3b3abce82a463e943339eef40f" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T rcppsw::algorithm::clustering::eh_cluster&lt; T, Policy &gt;::m_center</definition>
        <argsstring></argsstring>
        <name>m_center</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" line="158" column="34" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1a6657e7395b4c72dea287a64442d4fd98" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t rcppsw::algorithm::clustering::eh_cluster&lt; T, Policy &gt;::m_id</definition>
        <argsstring></argsstring>
        <name>m_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" line="156" column="34" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1a0211fe4f196b32d12b51cac4fbe6b8a8" prot="private" static="no" mutable="no">
        <type><ref refid="namespacercppsw_1_1algorithm_1_1clustering_1ae4bdc3c1b255447703e70a19e7c90aef" kindref="member">membership_type</ref>&lt; Policy &gt; &amp;</type>
        <definition>membership_type&lt;Policy&gt;&amp; rcppsw::algorithm::clustering::eh_cluster&lt; T, Policy &gt;::m_membership</definition>
        <argsstring></argsstring>
        <name>m_membership</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" line="157" column="25" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1a281593e28892e29f4f48d284480d93f1" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t rcppsw::algorithm::clustering::eh_cluster&lt; T, Policy &gt;::m_prev_size</definition>
        <argsstring></argsstring>
        <name>m_prev_size</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" line="159" column="34" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1a421b14cc18ffb0117f806bf7219a294b" prot="private" static="no" mutable="no">
        <type>const std::vector&lt; T &gt; &amp;</type>
        <definition>const std::vector&lt;T&gt;&amp; rcppsw::algorithm::clustering::eh_cluster&lt; T, Policy &gt;::mc_data</definition>
        <argsstring></argsstring>
        <name>mc_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" line="154" column="30" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1a6804b161d25cd0c6a457a460f074acec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rcppsw::algorithm::clustering::eh_cluster&lt; T, Policy &gt;::eh_cluster</definition>
        <argsstring>(uint id, const std::vector&lt; T &gt; &amp;data, membership_type&lt; Policy &gt; &amp;membership)</argsstring>
        <name>eh_cluster</name>
        <param>
          <type>uint</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="namespacercppsw_1_1algorithm_1_1clustering_1ae4bdc3c1b255447703e70a19e7c90aef" kindref="member">membership_type</ref>&lt; Policy &gt; &amp;</type>
          <declname>membership</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" line="124" column="3" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" bodystart="124" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1a8e57eff1a1302ed077640d46e7b403d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rcppsw::algorithm::clustering::eh_cluster&lt; T, Policy &gt;::add_point</definition>
        <argsstring>(size_t point_idx)</argsstring>
        <name>add_point</name>
        <param>
          <type>size_t</type>
          <declname>point_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" line="134" column="8" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1ae9d57603578a57a4230c0982c0370f3a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; rcppsw::algorithm::clustering::eh_cluster&lt; T, Policy &gt;::center</definition>
        <argsstring>(void) const</argsstring>
        <name>center</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" line="150" column="11" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1abcd60878bcd4bd2bd3d8c985de8ce6c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rcppsw::algorithm::clustering::eh_cluster&lt; T, Policy &gt;::converged</definition>
        <argsstring>(void) const</argsstring>
        <name>converged</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" line="142" column="8" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1a1256e527ed76d0472c0fc61d789cf906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster" kindref="compound">eh_cluster</ref> &amp;</type>
        <definition>eh_cluster&amp; rcppsw::algorithm::clustering::eh_cluster&lt; T, Policy &gt;::operator=</definition>
        <argsstring>(const eh_cluster &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster" kindref="compound">eh_cluster</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" line="132" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1ad29c8973c4d3110c629e632ff8efef2d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t rcppsw::algorithm::clustering::eh_cluster&lt; T, Policy &gt;::size</definition>
        <argsstring>(void) const</argsstring>
        <name>size</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" line="143" column="10" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1a83752c88a807693fc8d7886d32a3263d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rcppsw::algorithm::clustering::eh_cluster&lt; T, Policy &gt;::update_size</definition>
        <argsstring>(void)</argsstring>
        <name>update_size</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Update the size of the cluster after an iteration has finished. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" line="148" column="8" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" bodystart="148" bodyend="148"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A cluster representation for EH clustering algorithms. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>rcppsw::algorithm::clustering::eh_cluster&lt; T, Policy &gt;</label>
        <link refid="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster"/>
      </node>
    </collaborationgraph>
    <location file="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" line="122" column="17" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/cluster.hpp" bodystart="122" bodyend="161"/>
    <listofallmembers>
      <member refid="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1a8e57eff1a1302ed077640d46e7b403d3" prot="public" virt="non-virtual"><scope>rcppsw::algorithm::clustering::eh_cluster</scope><name>add_point</name></member>
      <member refid="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1ae9d57603578a57a4230c0982c0370f3a" prot="public" virt="non-virtual"><scope>rcppsw::algorithm::clustering::eh_cluster</scope><name>center</name></member>
      <member refid="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1abcd60878bcd4bd2bd3d8c985de8ce6c8" prot="public" virt="non-virtual"><scope>rcppsw::algorithm::clustering::eh_cluster</scope><name>converged</name></member>
      <member refid="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1a6804b161d25cd0c6a457a460f074acec" prot="public" virt="non-virtual"><scope>rcppsw::algorithm::clustering::eh_cluster</scope><name>eh_cluster</name></member>
      <member refid="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1a81cbbc3b3abce82a463e943339eef40f" prot="private" virt="non-virtual"><scope>rcppsw::algorithm::clustering::eh_cluster</scope><name>m_center</name></member>
      <member refid="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1a6657e7395b4c72dea287a64442d4fd98" prot="private" virt="non-virtual"><scope>rcppsw::algorithm::clustering::eh_cluster</scope><name>m_id</name></member>
      <member refid="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1a0211fe4f196b32d12b51cac4fbe6b8a8" prot="private" virt="non-virtual"><scope>rcppsw::algorithm::clustering::eh_cluster</scope><name>m_membership</name></member>
      <member refid="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1a281593e28892e29f4f48d284480d93f1" prot="private" virt="non-virtual"><scope>rcppsw::algorithm::clustering::eh_cluster</scope><name>m_prev_size</name></member>
      <member refid="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1a421b14cc18ffb0117f806bf7219a294b" prot="private" virt="non-virtual"><scope>rcppsw::algorithm::clustering::eh_cluster</scope><name>mc_data</name></member>
      <member refid="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1a1256e527ed76d0472c0fc61d789cf906" prot="public" virt="non-virtual"><scope>rcppsw::algorithm::clustering::eh_cluster</scope><name>operator=</name></member>
      <member refid="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1ad29c8973c4d3110c629e632ff8efef2d" prot="public" virt="non-virtual"><scope>rcppsw::algorithm::clustering::eh_cluster</scope><name>size</name></member>
      <member refid="classrcppsw_1_1algorithm_1_1clustering_1_1eh__cluster_1a83752c88a807693fc8d7886d32a3263d" prot="public" virt="non-virtual"><scope>rcppsw::algorithm::clustering::eh_cluster</scope><name>update_size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
