<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structrcppsw_1_1mpl_1_1detail_1_1detector" kind="struct" language="C++" prot="public">
    <compoundname>rcppsw::mpl::detail::detector</compoundname>
    <includes refid="mpl_8hpp" local="no">mpl.hpp</includes>
    <templateparamlist>
      <param>
        <type>class TFailType</type>
      </param>
      <param>
        <type>class AlwaysVoid</type>
      </param>
      <param>
        <type>template&lt; class... &gt; class</type>
        <declname>TFuncDecltype</declname>
        <defname>TFuncDecltype</defname>
      </param>
      <param>
        <type>class...</type>
        <declname>Args</declname>
        <defname>Args</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structrcppsw_1_1mpl_1_1detail_1_1detector_1ab860e0a6756333ac2bb98fc57ab894ff" prot="public" static="no">
        <type>TFailType</type>
        <definition>using rcppsw::mpl::detail::detector&lt; TFailType, AlwaysVoid, TFuncDecltype, Args &gt;::type =  TFailType</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Captures <computeroutput>TFailType</computeroutput> for future use. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/mpl/mpl.hpp" line="134" column="3" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/mpl/mpl.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structrcppsw_1_1mpl_1_1detail_1_1detector_1a9af41ea9921a879a6d69a1d5b187eb2d" prot="public" static="no">
        <type>std::false_type</type>
        <definition>using rcppsw::mpl::detail::detector&lt; TFailType, AlwaysVoid, TFuncDecltype, Args &gt;::value =  std::false_type</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Always <emphasis>FALSE</emphasis> for unsuccessful detection. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/mpl/mpl.hpp" line="129" column="3" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/mpl/mpl.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>If the specified function <computeroutput>TFuncDecltype</computeroutput> taking the specified <computeroutput>Args</computeroutput> is not well formed, then SFINAE and partial template specialization will select this template, indicating unsuccessful detection. </para>
    </briefdescription>
    <detaileddescription>
<para>If the specified function <computeroutput>TFuncDecltype</computeroutput> taking the specified <computeroutput>Args</computeroutput> is well formed, then SFINAE and partial template specialization will select this template, indicating successful detection.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TFailType</parametername>
</parameternamelist>
<parameterdescription>
<para>The default type to select upon unsuccessful detection.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TFuncDecltype</parametername>
</parameternamelist>
<parameterdescription>
<para>The decltype() of the function to detect.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>The types of the arguments to the function to detect.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TFailType</parametername>
</parameternamelist>
<parameterdescription>
<para>The default type to select upon unsuccessful detection. Unused in this version of the detector.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TFuncDecltype</parametername>
</parameternamelist>
<parameterdescription>
<para>The decltype() of the function to detect.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>The types of the arguments to the function to detect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>rcppsw::mpl::detail::detector&lt; TFailType, AlwaysVoid, TFuncDecltype, Args &gt;</label>
        <link refid="structrcppsw_1_1mpl_1_1detail_1_1detector"/>
      </node>
    </collaborationgraph>
    <location file="/home/jharwell/git/rcppsw/include/rcppsw/mpl/mpl.hpp" line="125" column="15" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/mpl/mpl.hpp" bodystart="125" bodyend="135"/>
    <listofallmembers>
      <member refid="structrcppsw_1_1mpl_1_1detail_1_1detector_1ab860e0a6756333ac2bb98fc57ab894ff" prot="public" virt="non-virtual"><scope>rcppsw::mpl::detail::detector</scope><name>type</name></member>
      <member refid="structrcppsw_1_1mpl_1_1detail_1_1detector_1a9af41ea9921a879a6d69a1d5b187eb2d" prot="public" virt="non-virtual"><scope>rcppsw::mpl::detail::detector</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
