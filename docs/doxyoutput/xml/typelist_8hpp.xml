<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="typelist_8hpp" kind="file" language="C++">
    <compoundname>typelist.hpp</compoundname>
    <includes local="no">boost/mpl/contains.hpp</includes>
    <includes local="no">boost/mpl/joint_view.hpp</includes>
    <includes local="no">boost/mpl/transform.hpp</includes>
    <includes local="no">boost/mpl/vector.hpp</includes>
    <includes local="no">boost/mpl/set.hpp</includes>
    <includes local="no">boost/utility/enable_if.hpp</includes>
    <includes local="no">boost/mpl/empty.hpp</includes>
    <includes local="no">boost/tuple/tuple.hpp</includes>
    <includes refid="common_8hpp" local="yes">rcppsw/common/common.hpp</includes>
    <includes refid="mpl_8hpp" local="yes">rcppsw/mpl/mpl.hpp</includes>
    <includes refid="rcppsw_8hpp" local="yes">rcppsw/rcppsw.hpp</includes>
    <includedby refid="visitor_8hpp" local="yes">/home/jharwell/git/rcppsw/include/rcppsw/patterns/visitor/visitor.hpp</includedby>
    <incdepgraph>
      <node id="5">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="6">
        <label>boost/mpl/set.hpp</label>
      </node>
      <node id="9">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="12">
        <label>rcsw/common/common.h</label>
        <link refid="common_8h.html" external="/home/jharwell/git/rcppsw/build/docs/rcsw/RCSW.tag"/>
      </node>
      <node id="10">
        <label>rcppsw/common/common.hpp</label>
        <link refid="common_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>boost/mpl/empty.hpp</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="4">
        <label>boost/mpl/transform.hpp</label>
      </node>
      <node id="15">
        <label>rcppsw/rcppsw.hpp</label>
        <link refid="rcppsw_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>rcppsw/mpl/mpl.hpp</label>
        <link refid="mpl_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>boost/mpl/contains.hpp</label>
      </node>
      <node id="7">
        <label>boost/utility/enable_if.hpp</label>
      </node>
      <node id="1">
        <label>/home/jharwell/git/rcppsw/include/rcppsw/mpl/typelist.hpp</label>
        <link refid="typelist_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>rcppsw/common/macros.hpp</label>
        <link refid="common_2macros_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>boost/mpl/joint_view.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/home/jharwell/git/rcppsw/include/rcppsw/mpl/typelist.hpp</label>
        <link refid="typelist_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/jharwell/git/rcppsw/include/rcppsw/patterns/visitor/visitor.hpp</label>
        <link refid="visitor_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structrcppsw_1_1mpl_1_1detail_1_1ExtendTList" prot="public">rcppsw::mpl::detail::ExtendTList</innerclass>
    <innerclass refid="structrcppsw_1_1mpl_1_1detail_1_1ExtendTList_3_01std_1_1tuple_3_01Ts_8_8_8_01_4_00_01T_01_4" prot="public">rcppsw::mpl::detail::ExtendTList&lt; std::tuple&lt; Ts... &gt;, T &gt;</innerclass>
    <innerclass refid="structrcppsw_1_1mpl_1_1detail_1_1ExtendTList_3_01std_1_1tuple_3_01void_01_4_00_01T_01_4" prot="public">rcppsw::mpl::detail::ExtendTList&lt; std::tuple&lt; void &gt;, T &gt;</innerclass>
    <innerclass refid="structrcppsw_1_1mpl_1_1detail_1_1rename__impl" prot="public">rcppsw::mpl::detail::rename_impl</innerclass>
    <innerclass refid="structrcppsw_1_1mpl_1_1detail_1_1rename__impl_3_01A_3_01T_8_8_8_01_4_00_01B_01_4" prot="public">rcppsw::mpl::detail::rename_impl&lt; A&lt; T... &gt;, B &gt;</innerclass>
    <innerclass refid="structrcppsw_1_1mpl_1_1typelist__wrap__into" prot="public">rcppsw::mpl::typelist_wrap_into</innerclass>
    <innerclass refid="structrcppsw_1_1mpl_1_1typelist__wrap__into_1_1apply" prot="public">rcppsw::mpl::typelist_wrap_into::apply</innerclass>
    <innernamespace refid="namespacercppsw">rcppsw</innernamespace>
    <innernamespace refid="namespacercppsw_1_1mpl">rcppsw::mpl</innernamespace>
    <innernamespace refid="namespacercppsw_1_1mpl_1_1detail">rcppsw::mpl::detail</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="typelist_8hpp_1af00a3972c57e6bbb43d017e6cca6f543" prot="public" static="no">
        <name>RCPPSW_SFINAE_TYPELIST_REJECT</name>
        <param><defname>Typelist</defname></param>
        <param><defname>T</defname></param>
        <initializer>  typename boost::disable_if&lt;                      \
      typename <ref refid="graph_8hpp_1ab90eab37470416a242c969f02bde4a2a" kindref="member">boost::mpl::contains</ref>&lt;Typelist, T&gt;::type&gt;::type* = nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>attached to if the specified type is found in the typelist, which must be a typelist compile-time object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/mpl/typelist.hpp" line="58" column="9" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/mpl/typelist.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="typelist_8hpp_1a30edd63818e9cff35a4db192dc8af59f" prot="public" static="no">
        <name>RCPPSW_SFINAE_TYPELIST_REQUIRE</name>
        <param><defname>Typelist</defname></param>
        <param><defname>T</defname></param>
        <initializer>  typename boost::enable_if&lt;                        \
      typename <ref refid="graph_8hpp_1ab90eab37470416a242c969f02bde4a2a" kindref="member">boost::mpl::contains</ref>&lt;Typelist, T&gt;::type&gt;::type* = nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>attached to if the specified type is found in the typelist, which must be a typelist compile-time object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/mpl/typelist.hpp" line="49" column="9" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/mpl/typelist.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>2019 John Harwell, All rights reserved.</para>
</simplesect>
This file is part of RCPPSW.</para>
<para>RCPPSW is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.</para>
<para>RCPPSW is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</para>
<para>You should have received a copy of the GNU General Public License along with RCPPSW. If not, see &lt;<ulink url="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</ulink> </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="21"><highlight class="preprocessor">#ifndef<sp/>INCLUDE_RCPPSW_MPL_TYPELIST_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDE_RCPPSW_MPL_TYPELIST_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>Includes</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/contains.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/joint_view.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/transform.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/vector.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/set.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/utility/enable_if.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/empty.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/tuple/tuple.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8hpp" kindref="compound">rcppsw/common/common.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mpl_8hpp" kindref="compound">rcppsw/mpl/mpl.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rcppsw_8hpp" kindref="compound">rcppsw/rcppsw.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>Macros</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>******************************************************************************/</highlight></codeline>
<codeline lineno="49" refid="typelist_8hpp_1a30edd63818e9cff35a4db192dc8af59f" refkind="member"><highlight class="preprocessor">#define<sp/>RCPPSW_SFINAE_TYPELIST_REQUIRE(Typelist,<sp/>T)<sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/>typename<sp/>boost::enable_if&lt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>boost::mpl::contains&lt;Typelist,<sp/>T&gt;::type&gt;::type*<sp/>=<sp/>nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="typelist_8hpp_1af00a3972c57e6bbb43d017e6cca6f543" refkind="member"><highlight class="preprocessor">#define<sp/>RCPPSW_SFINAE_TYPELIST_REJECT(Typelist,<sp/>T)<sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/>typename<sp/>boost::disable_if&lt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>boost::mpl::contains&lt;Typelist,<sp/>T&gt;::type&gt;::type*<sp/>=<sp/>nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>Namespaces/Decls</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="common_2macros_8hpp_1a553c4f9d95d9ac867c32675925e86368" kindref="member">NS_START</ref>(<ref refid="namespacercppsw" kindref="compound">rcppsw</ref>,<sp/>mpl);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>Trait<sp/>Detection<sp/>Templates</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>******************************************************************************/</highlight></codeline>
<codeline lineno="77"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacercppsw_1_1mpl_1a087641491e12b257b1c6ecf5414aa192" kindref="member">typelist</ref><sp/>=<sp/>boost::mpl::vector&lt;Ts...&gt;;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="namespacercppsw_1_1mpl_1a087641491e12b257b1c6ecf5414aa192" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacercppsw_1_1mpl_1a95f260d74410ea011c23268337bd9d02" kindref="member">empty</ref><sp/>=<sp/><ref refid="namespacercppsw_1_1mpl_1a95f260d74410ea011c23268337bd9d02" kindref="member">boost::mpl::empty</ref>&lt;Ts...&gt;;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="namespacercppsw_1_1mpl_1a95f260d74410ea011c23268337bd9d02" refkind="member"><highlight class="normal"><ref refid="common_2macros_8hpp_1a553c4f9d95d9ac867c32675925e86368" kindref="member">NS_START</ref>(detail);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">A,<sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">B&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">rename_impl;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="structrcppsw_1_1mpl_1_1detail_1_1rename__impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">A,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>T,<sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">B&gt;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrcppsw_1_1mpl_1_1detail_1_1rename__impl" kindref="compound">rename_impl</ref>&lt;A&lt;T...&gt;,<sp/>B&gt;<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>B&lt;T...&gt;;</highlight></codeline>
<codeline lineno="97" refid="structrcppsw_1_1mpl_1_1detail_1_1rename__impl_3_01A_3_01T_8_8_8_01_4_00_01B_01_4" refkind="compound"><highlight class="normal">};</highlight></codeline>
<codeline lineno="98" refid="structrcppsw_1_1mpl_1_1detail_1_1rename__impl_3_01A_3_01T_8_8_8_01_4_00_01B_01_4_1a231486196efc151ec7f5b95c3bf4043a" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TList,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrcppsw_1_1mpl_1_1detail_1_1ExtendTList" kindref="compound">ExtendTList</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="structrcppsw_1_1mpl_1_1detail_1_1ExtendTList" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrcppsw_1_1mpl_1_1detail_1_1ExtendTList" kindref="compound">ExtendTList</ref>&lt;std::tuple&lt;void&gt;,<sp/>T&gt;{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::tuple&lt;T&gt;;</highlight></codeline>
<codeline lineno="104" refid="structrcppsw_1_1mpl_1_1detail_1_1ExtendTList_3_01std_1_1tuple_3_01void_01_4_00_01T_01_4" refkind="compound"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105" refid="structrcppsw_1_1mpl_1_1detail_1_1ExtendTList_3_01std_1_1tuple_3_01void_01_4_00_01T_01_4_1a6fdcd6d47c09b9ba8b101a05c91e3d44" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrcppsw_1_1mpl_1_1detail_1_1ExtendTList" kindref="compound">ExtendTList</ref>&lt;std::tuple&lt;Ts...&gt;,<sp/>T&gt;{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structrcppsw_1_1mpl_1_1detail_1_1ExtendTList_3_01std_1_1tuple_3_01void_01_4_00_01T_01_4_1a6fdcd6d47c09b9ba8b101a05c91e3d44" kindref="member">type</ref><sp/>=<sp/>std::tuple&lt;Ts...,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="109" refid="structrcppsw_1_1mpl_1_1detail_1_1ExtendTList_3_01std_1_1tuple_3_01Ts_8_8_8_01_4_00_01T_01_4" refkind="compound"><highlight class="normal">};</highlight></codeline>
<codeline lineno="110" refid="structrcppsw_1_1mpl_1_1detail_1_1ExtendTList_3_01std_1_1tuple_3_01Ts_8_8_8_01_4_00_01T_01_4_1a8c86f16114b42799f8e104e8a9c89572" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><ref refid="common_2macros_8hpp_1af6c55b58384045452cc8ce88f54e3265" kindref="member">NS_END</ref>(detail);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">A,<sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">B&gt;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacercppsw_1_1mpl_1a8f16170d63177182637c57126fa14c70" kindref="member">rename</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structrcppsw_1_1mpl_1_1detail_1_1rename__impl" kindref="compound">detail::rename_impl&lt;A, B&gt;</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">WrappedType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">WrapperType,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>WrapperTypeArgs&gt;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrcppsw_1_1mpl_1_1typelist__wrap__into" kindref="compound">typelist_wrap_into</ref><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>ApplyArgs&gt;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">apply<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structrcppsw_1_1mpl_1_1detail_1_1ExtendTList_3_01std_1_1tuple_3_01Ts_8_8_8_01_4_00_01T_01_4_1a8c86f16114b42799f8e104e8a9c89572" kindref="member">type</ref><sp/>=<sp/>WrapperType&lt;ApplyArgs...,<sp/>WrapperTypeArgs...&gt;;</highlight></codeline>
<codeline lineno="151" refid="structrcppsw_1_1mpl_1_1typelist__wrap__into_1_1apply" refkind="compound"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="152" refid="structrcppsw_1_1mpl_1_1typelist__wrap__into_1_1apply_1abe33e62fdc251b0bf8411c66180e8a06" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Typelist,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">WrappedType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">WrapperType,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacercppsw_1_1mpl_1af62bfb86a6e582b117607194c2e0ec8e" kindref="member">typelist_wrap_apply</ref><sp/>=</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::mpl::transform&lt;Typelist,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structrcppsw_1_1mpl_1_1typelist__wrap__into" kindref="compound">typelist_wrap_into</ref>&lt;WrapperType,<sp/>Args...&gt;<sp/>&gt;;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="namespacercppsw_1_1mpl_1af62bfb86a6e582b117607194c2e0ec8e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Seq&gt;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacercppsw_1_1mpl_1a7253bb9de384d7440b6631c56dd4fea3" kindref="member">make_tuple_type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::mpl::fold&lt;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::mpl::fold&lt;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>Seq,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::mpl::set&lt;&gt;,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::mpl::insert&lt;boost::mpl::_1,<sp/>boost::mpl::_2&gt;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;::type,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>boost::tuple&lt;void&gt;,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><ref refid="structrcppsw_1_1mpl_1_1detail_1_1ExtendTList" kindref="compound">detail::ExtendTList&lt;boost::mpl::_1, boost::mpl::_2&gt;</ref></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>&gt;;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="namespacercppsw_1_1mpl_1a7253bb9de384d7440b6631c56dd4fea3" refkind="member"><highlight class="normal"><ref refid="common_2macros_8hpp_1af6c55b58384045452cc8ce88f54e3265" kindref="member">NS_END</ref>(mpl,<sp/><ref refid="namespacercppsw" kindref="compound">rcppsw</ref>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDE_RCPPSW_INCLUDE_MPL_TYPELIST_HPP_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/jharwell/git/rcppsw/include/rcppsw/mpl/typelist.hpp"/>
  </compounddef>
</doxygen>
