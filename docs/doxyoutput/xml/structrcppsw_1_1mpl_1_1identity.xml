<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structrcppsw_1_1mpl_1_1identity" kind="class" language="C++" prot="public">
    <compoundname>rcppsw::mpl::identity</compoundname>
    <includes refid="identity_8hpp" local="no">identity.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structrcppsw_1_1mpl_1_1identity_1a87b6b32f2c2e6c987a498c9676eca417" prot="public" static="no">
        <type>T</type>
        <definition>using rcppsw::mpl::identity&lt; T &gt;::type =  T</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/mpl/identity.hpp" line="53" column="3" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/mpl/identity.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Some types are not not default constructible, and therefore cannot be used with boost::mpl::for_each as is. If we only need the type of the class during an operation, and do not need access to any of its methods, we can add a layer of indirection with a simple struct that IS default constructible that we CAN use. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>rcppsw::mpl::identity&lt; T &gt;</label>
        <link refid="structrcppsw_1_1mpl_1_1identity"/>
      </node>
    </collaborationgraph>
    <location file="/home/jharwell/git/rcppsw/include/rcppsw/mpl/identity.hpp" line="52" column="15" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/mpl/identity.hpp" bodystart="52" bodyend="54"/>
    <listofallmembers>
      <member refid="structrcppsw_1_1mpl_1_1identity_1a87b6b32f2c2e6c987a498c9676eca417" prot="public" virt="non-virtual"><scope>rcppsw::mpl::identity</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
