<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrcppsw_1_1types_1_1timestep" kind="class" language="C++" prot="public" final="yes">
    <compoundname>rcppsw::types::timestep</compoundname>
    <basecompoundref refid="classrcppsw_1_1types_1_1named__type" prot="public" virt="non-virtual">rcppsw::types::named_type&lt; size_t, struct timestep_tag &gt;</basecompoundref>
    <includes refid="timestep_8hpp" local="no">timestep.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrcppsw_1_1types_1_1timestep_1a4fdc5392074ed843db261df74149a700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rcppsw::types::timestep::timestep</definition>
        <argsstring>(const timestep &amp;)=default</argsstring>
        <name>timestep</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1types_1_1timestep" kindref="compound">timestep</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" line="53" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1timestep_1affe7cfce414d59f72f432af438c6e17f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1types_1_1timestep" kindref="compound">timestep</ref></type>
        <definition>timestep rcppsw::types::timestep::operator%</definition>
        <argsstring>(const timestep &amp;other) const</argsstring>
        <name>operator%</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1types_1_1timestep" kindref="compound">timestep</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" line="86" column="12" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1timestep_1a4602591eefbb62ce1dfc32d3529f2124" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1types_1_1timestep" kindref="compound">timestep</ref></type>
        <definition>timestep rcppsw::types::timestep::operator+</definition>
        <argsstring>(const timestep &amp;other) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1types_1_1timestep" kindref="compound">timestep</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" line="58" column="12" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1timestep_1adecd92bf3692d96d46c2b48304bc17bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1types_1_1timestep" kindref="compound">timestep</ref></type>
        <definition>timestep rcppsw::types::timestep::operator+</definition>
        <argsstring>(size_t n) const</argsstring>
        <name>operator+</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" line="63" column="12" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1timestep_1a880fabd3c6d2e5a75bc0c9f7b576aa9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1types_1_1timestep" kindref="compound">timestep</ref> &amp;</type>
        <definition>timestep&amp; rcppsw::types::timestep::operator+=</definition>
        <argsstring>(const timestep &amp;other)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1types_1_1timestep" kindref="compound">timestep</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" line="68" column="12" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1timestep_1a9c7ffc46d25eccd895dc94a4e40a0bb9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1types_1_1timestep" kindref="compound">timestep</ref> &amp;</type>
        <definition>timestep&amp; rcppsw::types::timestep::operator+=</definition>
        <argsstring>(size_t n)</argsstring>
        <name>operator+=</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" line="72" column="12" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1timestep_1a24660d10a678ec880594159efd0c6ea4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1types_1_1timestep" kindref="compound">timestep</ref></type>
        <definition>timestep rcppsw::types::timestep::operator-</definition>
        <argsstring>(const timestep &amp;other) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1types_1_1timestep" kindref="compound">timestep</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" line="77" column="12" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1timestep_1a33a0eb6636e7c077b6bcce1562990af8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1types_1_1timestep" kindref="compound">timestep</ref></type>
        <definition>timestep rcppsw::types::timestep::operator-</definition>
        <argsstring>(size_t n) const</argsstring>
        <name>operator-</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" line="81" column="12" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1timestep_1a22369560bcf26f7469759f34e4c4af80" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool rcppsw::types::timestep::operator&lt;</definition>
        <argsstring>(const T &amp;other) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const T &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" line="105" column="3" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1timestep_1ae404aef7a0274eeda44bf132c52b03d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rcppsw::types::timestep::operator&lt;</definition>
        <argsstring>(const timestep &amp;other) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1types_1_1timestep" kindref="compound">timestep</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" line="91" column="3" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1timestep_1a2ccc0cba158cbb4e0a5d224eec44c693" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1types_1_1timestep" kindref="compound">timestep</ref> &amp;</type>
        <definition>timestep&amp; rcppsw::types::timestep::operator=</definition>
        <argsstring>(const timestep &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1types_1_1timestep" kindref="compound">timestep</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" line="54" column="12" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1timestep_1a026ed5ea81d076a73ce57c987166c0a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool rcppsw::types::timestep::operator==</definition>
        <argsstring>(const T &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const T &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" line="96" column="8" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1timestep_1ab0144b8bd5d3cbaab63e72ea4a1d87b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rcppsw::types::timestep::operator==</definition>
        <argsstring>(const timestep &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1types_1_1timestep" kindref="compound">timestep</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" line="90" column="8" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1timestep_1a581a2b5b041f98439e710dd2765e82c0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool rcppsw::types::timestep::operator&gt;</definition>
        <argsstring>(const T &amp;other) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const T &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" line="102" column="8" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1timestep_1ae9819e0c5739c0ca21fe47c6dd253d6b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rcppsw::types::timestep::operator&gt;</definition>
        <argsstring>(const timestep &amp;other) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1types_1_1timestep" kindref="compound">timestep</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" line="92" column="8" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1timestep_1ad22cb5899d66b737b21e6b535a3d16d7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool rcppsw::types::timestep::operator&gt;=</definition>
        <argsstring>(const T &amp;other) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const T &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" line="99" column="8" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1timestep_1a1dbd62eab324df350e0c99401ec8bc73" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rcppsw::types::timestep::operator&gt;=</definition>
        <argsstring>(const timestep &amp;other) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1types_1_1timestep" kindref="compound">timestep</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" line="93" column="8" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" bodystart="93" bodyend="93"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Type to be used for representing timesteps in a simulation environment. Meant to reduce the arbritrary (possibly erroneous) manipulations possible with simulation time via implicit conversion. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>rcppsw::er::stringizable</label>
        <link refid="classrcppsw_1_1er_1_1stringizable"/>
      </node>
      <node id="1">
        <label>rcppsw::types::timestep</label>
        <link refid="classrcppsw_1_1types_1_1timestep"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rcppsw::types::named_type&lt; size_t, struct timestep_tag &gt;</label>
        <link refid="classrcppsw_1_1types_1_1named__type"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>rcppsw::er::stringizable</label>
        <link refid="classrcppsw_1_1er_1_1stringizable"/>
      </node>
      <node id="1">
        <label>rcppsw::types::timestep</label>
        <link refid="classrcppsw_1_1types_1_1timestep"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rcppsw::types::named_type&lt; size_t, struct timestep_tag &gt;</label>
        <link refid="classrcppsw_1_1types_1_1named__type"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" line="49" column="36" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/timestep.hpp" bodystart="49" bodyend="106"/>
    <listofallmembers>
      <member refid="classrcppsw_1_1types_1_1named__type_1a45531d5cc915d48d5132f711dfb5541b" prot="public" virt="non-virtual"><scope>rcppsw::types::timestep</scope><name>named_type</name></member>
      <member refid="classrcppsw_1_1types_1_1timestep_1affe7cfce414d59f72f432af438c6e17f" prot="public" virt="non-virtual"><scope>rcppsw::types::timestep</scope><name>operator%</name></member>
      <member refid="classrcppsw_1_1types_1_1timestep_1a4602591eefbb62ce1dfc32d3529f2124" prot="public" virt="non-virtual"><scope>rcppsw::types::timestep</scope><name>operator+</name></member>
      <member refid="classrcppsw_1_1types_1_1timestep_1adecd92bf3692d96d46c2b48304bc17bd" prot="public" virt="non-virtual"><scope>rcppsw::types::timestep</scope><name>operator+</name></member>
      <member refid="classrcppsw_1_1types_1_1timestep_1a880fabd3c6d2e5a75bc0c9f7b576aa9c" prot="public" virt="non-virtual"><scope>rcppsw::types::timestep</scope><name>operator+=</name></member>
      <member refid="classrcppsw_1_1types_1_1timestep_1a9c7ffc46d25eccd895dc94a4e40a0bb9" prot="public" virt="non-virtual"><scope>rcppsw::types::timestep</scope><name>operator+=</name></member>
      <member refid="classrcppsw_1_1types_1_1timestep_1a24660d10a678ec880594159efd0c6ea4" prot="public" virt="non-virtual"><scope>rcppsw::types::timestep</scope><name>operator-</name></member>
      <member refid="classrcppsw_1_1types_1_1timestep_1a33a0eb6636e7c077b6bcce1562990af8" prot="public" virt="non-virtual"><scope>rcppsw::types::timestep</scope><name>operator-</name></member>
      <member refid="classrcppsw_1_1types_1_1timestep_1ae404aef7a0274eeda44bf132c52b03d0" prot="public" virt="non-virtual"><scope>rcppsw::types::timestep</scope><name>operator&lt;</name></member>
      <member refid="classrcppsw_1_1types_1_1timestep_1a22369560bcf26f7469759f34e4c4af80" prot="public" virt="non-virtual"><scope>rcppsw::types::timestep</scope><name>operator&lt;</name></member>
      <member refid="classrcppsw_1_1types_1_1timestep_1a2ccc0cba158cbb4e0a5d224eec44c693" prot="public" virt="non-virtual"><scope>rcppsw::types::timestep</scope><name>operator=</name></member>
      <member refid="classrcppsw_1_1types_1_1timestep_1ab0144b8bd5d3cbaab63e72ea4a1d87b3" prot="public" virt="non-virtual"><scope>rcppsw::types::timestep</scope><name>operator==</name></member>
      <member refid="classrcppsw_1_1types_1_1timestep_1a026ed5ea81d076a73ce57c987166c0a2" prot="public" virt="non-virtual"><scope>rcppsw::types::timestep</scope><name>operator==</name></member>
      <member refid="classrcppsw_1_1types_1_1timestep_1ae9819e0c5739c0ca21fe47c6dd253d6b" prot="public" virt="non-virtual"><scope>rcppsw::types::timestep</scope><name>operator&gt;</name></member>
      <member refid="classrcppsw_1_1types_1_1timestep_1a581a2b5b041f98439e710dd2765e82c0" prot="public" virt="non-virtual"><scope>rcppsw::types::timestep</scope><name>operator&gt;</name></member>
      <member refid="classrcppsw_1_1types_1_1timestep_1a1dbd62eab324df350e0c99401ec8bc73" prot="public" virt="non-virtual"><scope>rcppsw::types::timestep</scope><name>operator&gt;=</name></member>
      <member refid="classrcppsw_1_1types_1_1timestep_1ad22cb5899d66b737b21e6b535a3d16d7" prot="public" virt="non-virtual"><scope>rcppsw::types::timestep</scope><name>operator&gt;=</name></member>
      <member refid="classrcppsw_1_1types_1_1named__type_1ae3adaef7b9d236a163a83fdfc2e8a5c8" prot="public" virt="non-virtual"><scope>rcppsw::types::timestep</scope><name>set</name></member>
      <member refid="classrcppsw_1_1er_1_1stringizable_1a613eefda69afcc13383029355cb8cfe9" prot="public" virt="non-virtual"><scope>rcppsw::types::timestep</scope><name>stringizable</name></member>
      <member refid="classrcppsw_1_1types_1_1timestep_1a4fdc5392074ed843db261df74149a700" prot="public" virt="non-virtual"><scope>rcppsw::types::timestep</scope><name>timestep</name></member>
      <member refid="classrcppsw_1_1types_1_1named__type_1a5be785b00b2a79f27ede7953446c9bad" prot="public" virt="virtual"><scope>rcppsw::types::timestep</scope><name>to_str</name></member>
      <member refid="classrcppsw_1_1types_1_1named__type_1ab5e5d9c79710dbd92eea31dbe0357de5" prot="public" virt="non-virtual"><scope>rcppsw::types::timestep</scope><name>v</name></member>
      <member refid="classrcppsw_1_1types_1_1named__type_1ad2fd23fa3879f2cfd77c5ad9c65b9a57" prot="public" virt="virtual"><scope>rcppsw::types::timestep</scope><name>~named_type</name></member>
      <member refid="classrcppsw_1_1er_1_1stringizable_1ad025418a3c3349948cbea5c6facdb391" prot="public" virt="virtual"><scope>rcppsw::types::timestep</scope><name>~stringizable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
