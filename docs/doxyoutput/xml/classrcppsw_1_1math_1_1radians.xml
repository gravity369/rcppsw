<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrcppsw_1_1math_1_1radians" kind="class" language="C++" prot="public" final="yes">
    <compoundname>rcppsw::math::radians</compoundname>
    <basecompoundref refid="classrcppsw_1_1er_1_1stringizable" prot="public" virt="non-virtual">rcppsw::er::stringizable</basecompoundref>
    <includes refid="radians_8hpp" local="no">radians.hpp</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classrcppsw_1_1math_1_1radians_1ac6666621cf37a0312b44a010c62e1c21" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref></type>
        <definition>const radians rcppsw::math::radians::kPI</definition>
        <argsstring></argsstring>
        <name>kPI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="66" column="24" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrcppsw_1_1math_1_1radians_1aa42d44efa418456ab6d1670ed7a57617" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref></type>
        <definition>const radians rcppsw::math::radians::kPI_OVER_FOUR</definition>
        <argsstring></argsstring>
        <name>kPI_OVER_FOUR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="71" column="24" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrcppsw_1_1math_1_1radians_1adcca601e283f51853009eb8708008501" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref></type>
        <definition>const radians rcppsw::math::radians::kPI_OVER_THREE</definition>
        <argsstring></argsstring>
        <name>kPI_OVER_THREE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="70" column="24" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrcppsw_1_1math_1_1radians_1a71d334b5e3df842691aed60f15e71991" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref></type>
        <definition>const radians rcppsw::math::radians::kPI_OVER_TWO</definition>
        <argsstring></argsstring>
        <name>kPI_OVER_TWO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="69" column="24" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrcppsw_1_1math_1_1radians_1aec6d9b1af292a107807a6e67dbb9a6ae" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double rcppsw::math::radians::kRADIANS_TO_DEGREES</definition>
        <argsstring></argsstring>
        <name>kRADIANS_TO_DEGREES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="73" column="23" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrcppsw_1_1math_1_1radians_1a745e6ea1aaf1e8d23f30b9ba644955bc" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref></type>
        <definition>const radians rcppsw::math::radians::kTHREE_PI_OVER_TWO</definition>
        <argsstring></argsstring>
        <name>kTHREE_PI_OVER_TWO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="68" column="24" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrcppsw_1_1math_1_1radians_1a4fde1ae3b5fcba300f9996d11cc3bf3a" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref></type>
        <definition>const radians rcppsw::math::radians::kTWO_PI</definition>
        <argsstring></argsstring>
        <name>kTWO_PI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="67" column="24" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrcppsw_1_1math_1_1radians_1a5dd19637678a4e9f979374b64f912db4" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref></type>
        <definition>const radians rcppsw::math::radians::kZERO</definition>
        <argsstring></argsstring>
        <name>kZERO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="72" column="24" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrcppsw_1_1math_1_1radians_1a43ca3eac8631ab8547d9429a862dc35e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double rcppsw::math::radians::m_value</definition>
        <argsstring></argsstring>
        <name>m_value</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="197" column="10" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="197" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1afead1a731b75e57a9df3c0f717ca80d6" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>rcppsw::math::radians::radians</definition>
        <argsstring>(const degrees &amp;d)</argsstring>
        <name>radians</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1math_1_1degrees" kindref="compound">degrees</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="77" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1ad9d93dffcb4c687ebe5328f76a265d33" prot="public" static="no" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>rcppsw::math::radians::radians</definition>
        <argsstring>(double value) noexcept</argsstring>
        <name>radians</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="76" column="12" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1a448a434f8d6ea017243b942b9e6ed560" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rcppsw::math::radians::radians</definition>
        <argsstring>(void)=default</argsstring>
        <name>radians</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="75" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1a49c8c7b9dce20c718226484a51df75a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rcppsw::math::radians::is_equal</definition>
        <argsstring>(const radians &amp;other, double tol=kDOUBLE_EPSILON) const</argsstring>
        <name>is_equal</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tol</declname>
          <defval><ref refid="namespacercppsw_1_1math_1a3de3b99c93e96d09928476864d7ecf59" kindref="member">kDOUBLE_EPSILON</ref></defval>
        </param>
        <briefdescription>
<para>Determine if two instances are equal within the specified tolerance. </para>
        </briefdescription>
        <detaileddescription>
<para>This cannot be made part of <ref refid="classrcppsw_1_1math_1_1radians_1a008819e5ae6b23c2d3421c8e9483de0a" kindref="member">operator==()</ref>, because those functions cannot have default arguments. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="191" column="8" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="191" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1a844bbf089aae0e90e713313810f84634" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rcppsw::math::radians::operator!=</definition>
        <argsstring>(const radians &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="182" column="8" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="182" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1a07a787831d8f6df3b338bb39bfc51bb5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref></type>
        <definition>radians rcppsw::math::radians::operator*</definition>
        <argsstring>(double value) const</argsstring>
        <name>operator*</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="152" column="11" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="152" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1ab7f255f9f2f543948981fcfc8b88a879" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref> &amp;</type>
        <definition>radians&amp; rcppsw::math::radians::operator*=</definition>
        <argsstring>(double value)</argsstring>
        <name>operator*=</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="130" column="11" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1aa3d25f59aad5dd28790833bcd70ff2cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref></type>
        <definition>radians rcppsw::math::radians::operator+</definition>
        <argsstring>(const radians &amp;other) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="140" column="11" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="140" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1ab5deb8ee70e3dbad7d9f8a95ea6b616f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref> &amp;</type>
        <definition>radians&amp; rcppsw::math::radians::operator+</definition>
        <argsstring>(void)</argsstring>
        <name>operator+</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="116" column="11" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1a8e00936103e3f994ff85f6f1c9367100" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref> &amp;</type>
        <definition>radians&amp; rcppsw::math::radians::operator+=</definition>
        <argsstring>(const radians &amp;other)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="120" column="11" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1acd7ccc932fe9892b54c885c2e8ed655e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref></type>
        <definition>radians rcppsw::math::radians::operator-</definition>
        <argsstring>(const radians &amp;other) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="146" column="11" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="146" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1a955f7010234504e8d4cc4250ac66891a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref></type>
        <definition>radians rcppsw::math::radians::operator-</definition>
        <argsstring>(void) const</argsstring>
        <name>operator-</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="118" column="11" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1ace510f37073f43bb2a70e68fc9e86d8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref> &amp;</type>
        <definition>radians&amp; rcppsw::math::radians::operator-=</definition>
        <argsstring>(const radians &amp;other)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="125" column="11" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1aae88f9bed018f1b31ff715dc5d255c9c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double rcppsw::math::radians::operator/</definition>
        <argsstring>(const radians &amp;other) const</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="158" column="10" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1a6a913c25479cb322b58167796186c6c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref></type>
        <definition>radians rcppsw::math::radians::operator/</definition>
        <argsstring>(double value) const</argsstring>
        <name>operator/</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="160" column="11" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="160" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1a87662a3844a347ac700f1150e4fcad0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref> &amp;</type>
        <definition>radians&amp; rcppsw::math::radians::operator/=</definition>
        <argsstring>(double value)</argsstring>
        <name>operator/=</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="135" column="11" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1a5f448065ee7a68ef839366d98fd4b6e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rcppsw::math::radians::operator&lt;</definition>
        <argsstring>(const radians &amp;other) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="166" column="3" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="166" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1a4aedb5bf219a5591959111df5c8dca75" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rcppsw::math::radians::operator&lt;=</definition>
        <argsstring>(const radians &amp;other) const</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="168" column="3" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1a008819e5ae6b23c2d3421c8e9483de0a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rcppsw::math::radians::operator==</definition>
        <argsstring>(const radians &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Compare two radian values for equality, using the tolerance specified during construction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="178" column="8" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="178" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1a3848f7ae598cee919f55b06a736346ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rcppsw::math::radians::operator&gt;</definition>
        <argsstring>(const radians &amp;other) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="170" column="8" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1a0b68b796c6fdfb92baef31d254b9bf61" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rcppsw::math::radians::operator&gt;=</definition>
        <argsstring>(const radians &amp;other) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="172" column="8" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1a8897f1a8a11ffef0319ab97453743775" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rcppsw::math::radians::set</definition>
        <argsstring>(double value)</argsstring>
        <name>set</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the value in radians. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="82" column="8" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1adec8fa0947dfb11575045d3acb391b57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref> &amp;</type>
        <definition>radians&amp; rcppsw::math::radians::signed_normalize</definition>
        <argsstring>(void)</argsstring>
        <name>signed_normalize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Normalizes the value in the range [-pi, pi]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="92" column="11" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="92" bodyend="95"/>
        <references refid="classrcppsw_1_1math_1_1range_1a564e5d1adac98d5e1ff4e6d0542b3ae7" compoundref="range_8hpp" startline="188" endline="198">rcppsw::math::range&lt; T &gt;::wrap_value</references>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1aefe7c811628dee4db881ce70cead7049" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string rcppsw::math::radians::to_str</definition>
        <argsstring>(void) const override</argsstring>
        <name>to_str</name>
        <reimplements refid="classrcppsw_1_1er_1_1stringizable_1a0776b3b6278cc72e8b04448c016bc197">to_str</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return a string representation of the radians object of the form &apos;rad(XX) -&gt; deg(YY)&apos;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="109" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1ae47181227d4bcb853008913fe2dbfb8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref> &amp;</type>
        <definition>radians&amp; rcppsw::math::radians::unsigned_normalize</definition>
        <argsstring>(void)</argsstring>
        <name>unsigned_normalize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Normalizes the value in the range [0, 2pi]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="100" column="11" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1math_1_1radians_1ae9552b3ff8dcb07c7401bb22ec0ef682" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double rcppsw::math::radians::v</definition>
        <argsstring>(void) const</argsstring>
        <name>v</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the raw value in radians. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="87" column="10" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="87" bodyend="87"/>
        <referencedby refid="classrcppsw_1_1math_1_1vector2_1a64d5d47b4abcafa40e7737479caf9158" compoundref="vector2_8hpp" startline="168" endline="171">rcppsw::math::vector2&lt; T &gt;::set</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classrcppsw_1_1math_1_1radians_1a1ad22c437af591159abe07565d7a9f88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::istream &amp;</type>
        <definition>std::istream&amp; operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, radians &amp;r)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classrcppsw_1_1math_1_1radians" kindref="compound">radians</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="111" column="23" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="111" bodyend="114"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Used to store an angle value in radians (duh). </para>
    </briefdescription>
    <detaileddescription>
<para>When comparing instances for approxmate equality, they are compared to 6 decimal places, by default; this can be overriden on a per-comparison basis if desired, or set class-wide via kAPPROX_EQUALITY_TOL. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>rcppsw::er::stringizable</label>
        <link refid="classrcppsw_1_1er_1_1stringizable"/>
      </node>
      <node id="1">
        <label>rcppsw::math::radians</label>
        <link refid="classrcppsw_1_1math_1_1radians"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>rcppsw::er::stringizable</label>
        <link refid="classrcppsw_1_1er_1_1stringizable"/>
      </node>
      <node id="1">
        <label>rcppsw::math::radians</label>
        <link refid="classrcppsw_1_1math_1_1radians"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>+kZERO</edgelabel>
          <edgelabel>+kPI_OVER_FOUR</edgelabel>
          <edgelabel>+kPI</edgelabel>
          <edgelabel>+kPI_OVER_TWO</edgelabel>
          <edgelabel>+kTWO_PI</edgelabel>
          <edgelabel>+kTHREE_PI_OVER_TWO</edgelabel>
          <edgelabel>+kPI_OVER_THREE</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" line="60" column="38" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/math/radians.hpp" bodystart="60" bodyend="199"/>
    <listofallmembers>
      <member refid="classrcppsw_1_1math_1_1radians_1a49c8c7b9dce20c718226484a51df75a6" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>is_equal</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1ac6666621cf37a0312b44a010c62e1c21" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>kPI</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1aa42d44efa418456ab6d1670ed7a57617" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>kPI_OVER_FOUR</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1adcca601e283f51853009eb8708008501" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>kPI_OVER_THREE</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1a71d334b5e3df842691aed60f15e71991" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>kPI_OVER_TWO</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1aec6d9b1af292a107807a6e67dbb9a6ae" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>kRADIANS_TO_DEGREES</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1a745e6ea1aaf1e8d23f30b9ba644955bc" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>kTHREE_PI_OVER_TWO</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1a4fde1ae3b5fcba300f9996d11cc3bf3a" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>kTWO_PI</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1a5dd19637678a4e9f979374b64f912db4" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>kZERO</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1a43ca3eac8631ab8547d9429a862dc35e" prot="private" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>m_value</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1a844bbf089aae0e90e713313810f84634" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>operator!=</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1a07a787831d8f6df3b338bb39bfc51bb5" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>operator*</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1ab7f255f9f2f543948981fcfc8b88a879" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>operator*=</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1ab5deb8ee70e3dbad7d9f8a95ea6b616f" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>operator+</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1aa3d25f59aad5dd28790833bcd70ff2cb" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>operator+</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1a8e00936103e3f994ff85f6f1c9367100" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>operator+=</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1a955f7010234504e8d4cc4250ac66891a" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>operator-</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1acd7ccc932fe9892b54c885c2e8ed655e" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>operator-</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1ace510f37073f43bb2a70e68fc9e86d8f" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>operator-=</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1aae88f9bed018f1b31ff715dc5d255c9c" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>operator/</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1a6a913c25479cb322b58167796186c6c1" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>operator/</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1a87662a3844a347ac700f1150e4fcad0b" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>operator/=</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1a5f448065ee7a68ef839366d98fd4b6e3" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>operator&lt;</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1a4aedb5bf219a5591959111df5c8dca75" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>operator&lt;=</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1a008819e5ae6b23c2d3421c8e9483de0a" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>operator==</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1a3848f7ae598cee919f55b06a736346ff" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>operator&gt;</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1a0b68b796c6fdfb92baef31d254b9bf61" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>operator&gt;=</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1a1ad22c437af591159abe07565d7a9f88" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>operator&gt;&gt;</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1a448a434f8d6ea017243b942b9e6ed560" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>radians</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1ad9d93dffcb4c687ebe5328f76a265d33" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>radians</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1afead1a731b75e57a9df3c0f717ca80d6" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>radians</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1a8897f1a8a11ffef0319ab97453743775" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>set</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1adec8fa0947dfb11575045d3acb391b57" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>signed_normalize</name></member>
      <member refid="classrcppsw_1_1er_1_1stringizable_1a613eefda69afcc13383029355cb8cfe9" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>stringizable</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1aefe7c811628dee4db881ce70cead7049" prot="public" virt="virtual"><scope>rcppsw::math::radians</scope><name>to_str</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1ae47181227d4bcb853008913fe2dbfb8a" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>unsigned_normalize</name></member>
      <member refid="classrcppsw_1_1math_1_1radians_1ae9552b3ff8dcb07c7401bb22ec0ef682" prot="public" virt="non-virtual"><scope>rcppsw::math::radians</scope><name>v</name></member>
      <member refid="classrcppsw_1_1er_1_1stringizable_1ad025418a3c3349948cbea5c6facdb391" prot="public" virt="virtual"><scope>rcppsw::math::radians</scope><name>~stringizable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
