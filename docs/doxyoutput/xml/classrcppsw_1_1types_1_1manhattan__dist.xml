<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrcppsw_1_1types_1_1manhattan__dist" kind="class" language="C++" prot="public" final="yes">
    <compoundname>rcppsw::types::manhattan_dist</compoundname>
    <basecompoundref refid="classrcppsw_1_1types_1_1distance__measure" prot="public" virt="non-virtual">rcppsw::types::distance_measure&lt; int, struct manhattan_dist_tag &gt;</basecompoundref>
    <includes refid="manhattan__dist_8hpp" local="no">manhattan_dist.hpp</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classrcppsw_1_1types_1_1manhattan__dist_1a6ea2f9c8352ee2b5b0dbbd0cc9e0f313" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1types_1_1manhattan__dist" kindref="compound">manhattan_dist</ref></type>
        <definition>static manhattan_dist rcppsw::types::manhattan_dist::make</definition>
        <argsstring>(const int &amp;value)</argsstring>
        <name>make</name>
        <param>
          <type>const int &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a <ref refid="classrcppsw_1_1types_1_1manhattan__dist" kindref="compound">manhattan_dist</ref> from a numeric value, making it positive if necessary. This incurs a higher runtime cost, and so is a separate function from the constructor, which <emphasis>assumes</emphasis> the <computeroutput>value</computeroutput> to be positive semi-definite. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" line="57" column="25"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrcppsw_1_1types_1_1manhattan__dist_1a29f075442496a4687e14234d8793a859" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rcppsw::types::manhattan_dist::manhattan_dist</definition>
        <argsstring>(const int &amp;v, bool check_psd=true)</argsstring>
        <name>manhattan_dist</name>
        <param>
          <type>const int &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>check_psd</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" line="59" column="12" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" bodystart="59" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1manhattan__dist_1aa81f2a1594dbbe78da3b16eb928f9b39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rcppsw::types::manhattan_dist::manhattan_dist</definition>
        <argsstring>(const manhattan_dist &amp;)=default</argsstring>
        <name>manhattan_dist</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1types_1_1manhattan__dist" kindref="compound">manhattan_dist</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" line="63" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1manhattan__dist_1a648004842e8c96ff03cb97a2cebfd71a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rcppsw::types::manhattan_dist::~manhattan_dist</definition>
        <argsstring>(void) override=default</argsstring>
        <name>~manhattan_dist</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" line="62" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1manhattan__dist_1a0474e2dfbb19167b1a2a2107c4097286" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1types_1_1manhattan__dist" kindref="compound">manhattan_dist</ref></type>
        <definition>manhattan_dist rcppsw::types::manhattan_dist::operator*</definition>
        <argsstring>(const manhattan_dist &amp;rhs) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1types_1_1manhattan__dist" kindref="compound">manhattan_dist</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" line="79" column="18" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1manhattan__dist_1affb2cadaaaac0d2576669a5e4bd3ed75" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1types_1_1manhattan__dist" kindref="compound">manhattan_dist</ref></type>
        <definition>manhattan_dist rcppsw::types::manhattan_dist::operator*</definition>
        <argsstring>(int rhs) const</argsstring>
        <name>operator*</name>
        <param>
          <type>int</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" line="65" column="18" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1manhattan__dist_1ab8ff728cc820c48178aacd2852e9698d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1types_1_1manhattan__dist" kindref="compound">manhattan_dist</ref></type>
        <definition>manhattan_dist rcppsw::types::manhattan_dist::operator+</definition>
        <argsstring>(const manhattan_dist &amp;rhs) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1types_1_1manhattan__dist" kindref="compound">manhattan_dist</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" line="88" column="18" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1manhattan__dist_1aa424686a052fab9f5028b421498beaa4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1types_1_1manhattan__dist" kindref="compound">manhattan_dist</ref></type>
        <definition>manhattan_dist rcppsw::types::manhattan_dist::operator+</definition>
        <argsstring>(int rhs) const</argsstring>
        <name>operator+</name>
        <param>
          <type>int</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" line="74" column="18" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1manhattan__dist_1a24e6b397cd8446197c6beb79b396f888" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1types_1_1manhattan__dist" kindref="compound">manhattan_dist</ref> &amp;</type>
        <definition>manhattan_dist&amp; rcppsw::types::manhattan_dist::operator+=</definition>
        <argsstring>(const manhattan_dist &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1types_1_1manhattan__dist" kindref="compound">manhattan_dist</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" line="100" column="18" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1manhattan__dist_1a40497f6b805c9af1c4cde2737d78d75d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1types_1_1manhattan__dist" kindref="compound">manhattan_dist</ref></type>
        <definition>manhattan_dist rcppsw::types::manhattan_dist::operator-</definition>
        <argsstring>(const manhattan_dist &amp;rhs) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1types_1_1manhattan__dist" kindref="compound">manhattan_dist</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" line="85" column="18" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1manhattan__dist_1aadb5cd8a4d696f2a26eff5caf5b850b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1types_1_1manhattan__dist" kindref="compound">manhattan_dist</ref></type>
        <definition>manhattan_dist rcppsw::types::manhattan_dist::operator-</definition>
        <argsstring>(int rhs) const</argsstring>
        <name>operator-</name>
        <param>
          <type>int</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" line="71" column="18" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1manhattan__dist_1a2a630779a4f82efa4c075957dc10618f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1types_1_1manhattan__dist" kindref="compound">manhattan_dist</ref> &amp;</type>
        <definition>manhattan_dist&amp; rcppsw::types::manhattan_dist::operator-=</definition>
        <argsstring>(int rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>int</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" line="92" column="18" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1manhattan__dist_1a735df41ed8f60c276dc873ccd98dd567" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1types_1_1manhattan__dist" kindref="compound">manhattan_dist</ref></type>
        <definition>manhattan_dist rcppsw::types::manhattan_dist::operator/</definition>
        <argsstring>(const manhattan_dist &amp;rhs) const</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1types_1_1manhattan__dist" kindref="compound">manhattan_dist</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" line="82" column="18" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" bodystart="82" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1manhattan__dist_1a28b6d8e450468d387a6280967a768fd6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1types_1_1manhattan__dist" kindref="compound">manhattan_dist</ref></type>
        <definition>manhattan_dist rcppsw::types::manhattan_dist::operator/</definition>
        <argsstring>(int rhs) const</argsstring>
        <name>operator/</name>
        <param>
          <type>int</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" line="68" column="18" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1types_1_1manhattan__dist_1ad2b82a03e08cd3d81b8ad680279b1279" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrcppsw_1_1types_1_1manhattan__dist" kindref="compound">manhattan_dist</ref> &amp;</type>
        <definition>manhattan_dist&amp; rcppsw::types::manhattan_dist::operator=</definition>
        <argsstring>(const manhattan_dist &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classrcppsw_1_1types_1_1manhattan__dist" kindref="compound">manhattan_dist</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" line="96" column="18" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" bodystart="96" bodyend="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Specifies a distance between two points in manhattan distance, and as such is always positive. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>rcppsw::types::named_type&lt; int, struct manhattan_dist_tag &gt;</label>
        <link refid="classrcppsw_1_1types_1_1named__type"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>rcppsw::er::stringizable</label>
        <link refid="classrcppsw_1_1er_1_1stringizable"/>
      </node>
      <node id="5">
        <label>rcppsw::er::client&lt; distance_measure&lt; int, struct manhattan_dist_tag &gt; &gt;</label>
        <link refid="classrcppsw_1_1er_1_1client"/>
      </node>
      <node id="1">
        <label>rcppsw::types::manhattan_dist</label>
        <link refid="classrcppsw_1_1types_1_1manhattan__dist"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rcppsw::types::distance_measure&lt; int, struct manhattan_dist_tag &gt;</label>
        <link refid="classrcppsw_1_1types_1_1distance__measure"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>rcppsw::types::named_type&lt; int, struct manhattan_dist_tag &gt;</label>
        <link refid="classrcppsw_1_1types_1_1named__type"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>rcppsw::er::stringizable</label>
        <link refid="classrcppsw_1_1er_1_1stringizable"/>
      </node>
      <node id="5">
        <label>rcppsw::er::client&lt; distance_measure&lt; int, struct manhattan_dist_tag &gt; &gt;</label>
        <link refid="classrcppsw_1_1er_1_1client"/>
      </node>
      <node id="1">
        <label>rcppsw::types::manhattan_dist</label>
        <link refid="classrcppsw_1_1types_1_1manhattan__dist"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rcppsw::types::distance_measure&lt; int, struct manhattan_dist_tag &gt;</label>
        <link refid="classrcppsw_1_1types_1_1distance__measure"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" line="49" column="55" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/types/manhattan_dist.hpp" bodystart="48" bodyend="104"/>
    <listofallmembers>
      <member refid="classrcppsw_1_1er_1_1client_1a6f82007aff2abc0424c3aea112f4d338" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>client</name></member>
      <member refid="classrcppsw_1_1er_1_1client_1ac240653183e3bc50cdd7b94ab573dfdd" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>client</name></member>
      <member refid="classrcppsw_1_1types_1_1distance__measure_1a1a2df64630ac102d9d432373922e0900" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>distance_measure</name></member>
      <member refid="classrcppsw_1_1types_1_1distance__measure_1a8b9eabce8e4ef1226385264a358f7467" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>distance_measure</name></member>
      <member refid="classrcppsw_1_1er_1_1client_1a8dbae2145314c17f94296af27e986ec7" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>env_verify</name></member>
      <member refid="classrcppsw_1_1er_1_1client_1a4fb3fcd567a3f7e65bbf8938ab5e8db7" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>logfile_set</name></member>
      <member refid="classrcppsw_1_1er_1_1client_1a4fca204898963d5d8ecb91e00cd84b88" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>logfile_set</name></member>
      <member refid="classrcppsw_1_1er_1_1client_1a6b752123f721497e565e028571a1a37b" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>logger</name></member>
      <member refid="classrcppsw_1_1er_1_1client_1ab40243dbcdd2e695bace0708788d7ee2" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>logger_name</name></member>
      <member refid="classrcppsw_1_1er_1_1client_1ae3f3005bc9b32db29bd751bc8511d72a" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>logging_init</name></member>
      <member refid="classrcppsw_1_1types_1_1manhattan__dist_1a6ea2f9c8352ee2b5b0dbbd0cc9e0f313" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>make</name></member>
      <member refid="classrcppsw_1_1types_1_1manhattan__dist_1a29f075442496a4687e14234d8793a859" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>manhattan_dist</name></member>
      <member refid="classrcppsw_1_1types_1_1manhattan__dist_1aa81f2a1594dbbe78da3b16eb928f9b39" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>manhattan_dist</name></member>
      <member refid="classrcppsw_1_1er_1_1client_1a8e8addf09ab47c9ff19b70ebb72d614a" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>mdc_add</name></member>
      <member refid="classrcppsw_1_1er_1_1client_1ab8d0b0946f73dc6ed3c0f6c6981f7a93" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>mdc_rm</name></member>
      <member refid="classrcppsw_1_1types_1_1named__type_1a45531d5cc915d48d5132f711dfb5541b" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>named_type</name></member>
      <member refid="classrcppsw_1_1er_1_1client_1a4b552cb8803ac3cc5c96a6a97deaaec0" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>ndc_do_pop</name></member>
      <member refid="classrcppsw_1_1er_1_1client_1a2b3dbedbca4f96b9e2e2ce91fb3bac3d" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>ndc_do_push</name></member>
      <member refid="classrcppsw_1_1types_1_1manhattan__dist_1affb2cadaaaac0d2576669a5e4bd3ed75" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>operator*</name></member>
      <member refid="classrcppsw_1_1types_1_1manhattan__dist_1a0474e2dfbb19167b1a2a2107c4097286" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>operator*</name></member>
      <member refid="classrcppsw_1_1types_1_1manhattan__dist_1aa424686a052fab9f5028b421498beaa4" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>operator+</name></member>
      <member refid="classrcppsw_1_1types_1_1manhattan__dist_1ab8ff728cc820c48178aacd2852e9698d" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>operator+</name></member>
      <member refid="classrcppsw_1_1types_1_1manhattan__dist_1a24e6b397cd8446197c6beb79b396f888" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>operator+=</name></member>
      <member refid="classrcppsw_1_1types_1_1manhattan__dist_1aadb5cd8a4d696f2a26eff5caf5b850b6" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>operator-</name></member>
      <member refid="classrcppsw_1_1types_1_1manhattan__dist_1a40497f6b805c9af1c4cde2737d78d75d" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>operator-</name></member>
      <member refid="classrcppsw_1_1types_1_1manhattan__dist_1a2a630779a4f82efa4c075957dc10618f" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>operator-=</name></member>
      <member refid="classrcppsw_1_1types_1_1manhattan__dist_1a28b6d8e450468d387a6280967a768fd6" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>operator/</name></member>
      <member refid="classrcppsw_1_1types_1_1manhattan__dist_1a735df41ed8f60c276dc873ccd98dd567" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>operator/</name></member>
      <member refid="classrcppsw_1_1types_1_1distance__measure_1a4c1fef0674c235cd8523abb84047654e" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>operator&lt;</name></member>
      <member refid="classrcppsw_1_1types_1_1distance__measure_1a174ee7f7675692e22288c07948a4b8b6" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>operator&lt;=</name></member>
      <member refid="classrcppsw_1_1types_1_1distance__measure_1a119ce1e7927cd4ad28c6ed556fc6269a" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>operator&lt;=</name></member>
      <member refid="classrcppsw_1_1types_1_1manhattan__dist_1ad2b82a03e08cd3d81b8ad680279b1279" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>operator=</name></member>
      <member refid="classrcppsw_1_1er_1_1client_1ac18e66461acd38f97e1cefe7611ca9fb" prot="public" virt="non-virtual" ambiguityscope="distance_measure&lt; int, struct manhattan_dist_tag &gt;::"><scope>rcppsw::types::manhattan_dist</scope><name>operator=</name></member>
      <member refid="classrcppsw_1_1types_1_1distance__measure_1a313e22de24f4a672f66da8e593aa7425" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>operator&gt;</name></member>
      <member refid="classrcppsw_1_1types_1_1distance__measure_1ae5abceecbe8e7ee73a12142c080bb4c9" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>operator&gt;</name></member>
      <member refid="classrcppsw_1_1types_1_1distance__measure_1aa9ba96ab2957ce3cdad5857c55fc097d" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>operator&gt;=</name></member>
      <member refid="classrcppsw_1_1types_1_1distance__measure_1afebaafc7a799abb0b72e086d9f06a2a6" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>operator&gt;=</name></member>
      <member refid="classrcppsw_1_1types_1_1named__type_1ae3adaef7b9d236a163a83fdfc2e8a5c8" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>set</name></member>
      <member refid="classrcppsw_1_1er_1_1stringizable_1a613eefda69afcc13383029355cb8cfe9" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>stringizable</name></member>
      <member refid="classrcppsw_1_1types_1_1named__type_1a5be785b00b2a79f27ede7953446c9bad" prot="public" virt="virtual"><scope>rcppsw::types::manhattan_dist</scope><name>to_str</name></member>
      <member refid="classrcppsw_1_1types_1_1named__type_1ab5e5d9c79710dbd92eea31dbe0357de5" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>v</name></member>
      <member refid="classrcppsw_1_1types_1_1distance__measure_1aea4a37b0610e8c0aafd27b41d60278d7" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>value_type</name></member>
      <member refid="classrcppsw_1_1er_1_1client_1a0e6a2aa2f2d0af9352f3ca3044e015d0" prot="public" virt="virtual"><scope>rcppsw::types::manhattan_dist</scope><name>~client</name></member>
      <member refid="classrcppsw_1_1types_1_1distance__measure_1a90138f34ada5eb86657b6fb869d07bb5" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>~distance_measure</name></member>
      <member refid="classrcppsw_1_1types_1_1manhattan__dist_1a648004842e8c96ff03cb97a2cebfd71a" prot="public" virt="non-virtual"><scope>rcppsw::types::manhattan_dist</scope><name>~manhattan_dist</name></member>
      <member refid="classrcppsw_1_1types_1_1named__type_1ad2fd23fa3879f2cfd77c5ad9c65b9a57" prot="public" virt="virtual"><scope>rcppsw::types::manhattan_dist</scope><name>~named_type</name></member>
      <member refid="classrcppsw_1_1er_1_1stringizable_1ad025418a3c3349948cbea5c6facdb391" prot="public" virt="virtual"><scope>rcppsw::types::manhattan_dist</scope><name>~stringizable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
