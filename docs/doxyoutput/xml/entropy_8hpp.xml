<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="entropy_8hpp" kind="file" language="C++">
    <compoundname>entropy.hpp</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">limits</includes>
    <includes local="no">map</includes>
    <includes refid="rcppsw_8hpp" local="yes">rcppsw/rcppsw.hpp</includes>
    <includes refid="client_8hpp" local="yes">rcppsw/er/client.hpp</includes>
    <includes refid="cluster_8hpp" local="yes">rcppsw/algorithm/clustering/cluster.hpp</includes>
    <includes local="yes">rcsw/utils/time_utils.h</includes>
    <includes refid="eh__clustering__impl_8hpp" local="yes">rcppsw/algorithm/clustering/eh_clustering_impl.hpp</includes>
    <includes refid="range_8hpp" local="yes">rcppsw/math/range.hpp</includes>
    <includes refid="ientropy_8hpp" local="yes">rcppsw/math/ientropy.hpp</includes>
    <incdepgraph>
      <node id="33">
        <label>rcsw/utils/time_utils.h</label>
        <link refid="time__utils_8h.html" external="/home/jharwell/git/rcppsw/build/docs/rcsw/RCSW.tag"/>
      </node>
      <node id="31">
        <label>rcppsw/math/math.hpp</label>
        <link refid="math_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>functional</label>
      </node>
      <node id="3">
        <label>limits</label>
      </node>
      <node id="22">
        <label>boost/stacktrace.hpp</label>
      </node>
      <node id="15">
        <label>log4cxx/fileappender.h</label>
      </node>
      <node id="8">
        <label>rcsw/common/common.h</label>
        <link refid="common_8h.html" external="/home/jharwell/git/rcppsw/build/docs/rcsw/RCSW.tag"/>
      </node>
      <node id="6">
        <label>rcppsw/common/common.hpp</label>
        <link refid="common_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>rcppsw/utils/string_utils.hpp</label>
        <link refid="string__utils_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>cmath</label>
      </node>
      <node id="19">
        <label>log4cxx/xml/domconfigurator.h</label>
      </node>
      <node id="24">
        <label>cassert</label>
      </node>
      <node id="21">
        <label>rcppsw/er/stacktrace.hpp</label>
        <link refid="stacktrace_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="37">
        <label>rcppsw/math/range.hpp</label>
        <link refid="range_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>rcppsw/algorithm/clustering/cluster.hpp</label>
        <link refid="cluster_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>map</label>
      </node>
      <node id="30">
        <label>unordered_set</label>
      </node>
      <node id="1">
        <label>/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/entropy.hpp</label>
        <link refid="entropy_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>log4cxx/patternlayout.h</label>
      </node>
      <node id="5">
        <label>rcppsw/rcppsw.hpp</label>
        <link refid="rcppsw_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>log4cxx/ndc.h</label>
      </node>
      <node id="14">
        <label>log4cxx/consoleappender.h</label>
      </node>
      <node id="12">
        <label>rcppsw/er/er.hpp</label>
        <link refid="er_8hpp"/>
      </node>
      <node id="10">
        <label>rcppsw/mpl/mpl.hpp</label>
        <link refid="mpl_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>rcppsw/algorithm/clustering/membership_policy.hpp</label>
        <link refid="membership__policy_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>vector</label>
      </node>
      <node id="41">
        <label>rcppsw/er/stringizable.hpp</label>
        <link refid="stringizable_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>rcppsw/algorithm/clustering/eh_clustering_impl.hpp</label>
        <link refid="eh__clustering__impl_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>utility</label>
      </node>
      <node id="23">
        <label>array</label>
      </node>
      <node id="40">
        <label>sstream</label>
      </node>
      <node id="45">
        <label>rcppsw/math/radians.hpp</label>
        <link refid="radians_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>iosfwd</label>
      </node>
      <node id="25">
        <label>iostream</label>
      </node>
      <node id="9">
        <label>rcppsw/common/macros.hpp</label>
        <link refid="common_2macros_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>rcppsw/algorithm/clustering/base_clustering_impl.hpp</label>
        <link refid="base__clustering__impl_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>rcppsw/math/ientropy.hpp</label>
        <link refid="ientropy_8hpp"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>rcppsw/er/client.hpp</label>
        <link refid="client_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>type_traits</label>
      </node>
      <node id="20">
        <label>rcppsw/er/macros.hpp</label>
        <link refid="er_2macros_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>algorithm</label>
      </node>
      <node id="16">
        <label>log4cxx/logger.h</label>
      </node>
      <node id="44">
        <label>rcppsw/math/expression.hpp</label>
        <link refid="expression_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="classrcppsw_1_1algorithm_1_1clustering_1_1entropy__balch2000" prot="public">rcppsw::algorithm::clustering::entropy_balch2000</innerclass>
    <innernamespace refid="namespacercppsw">rcppsw</innernamespace>
    <innernamespace refid="namespacercppsw_1_1algorithm">rcppsw::algorithm</innernamespace>
    <innernamespace refid="namespacercppsw_1_1algorithm_1_1clustering">rcppsw::algorithm::clustering</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>2018 John Harwell, All rights reserved.</para>
</simplesect>
This file is part of RCPPSW.</para>
<para>RCPPSW is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.</para>
<para>RCPPSW is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</para>
<para>You should have received a copy of the GNU General Public License along with RCPPSW. If not, see &lt;<ulink url="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</ulink> </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="20"><highlight class="preprocessor">#ifndef<sp/>INCLUDE_RCPPSW_ALGORITHM_CLUSTERING_ENTROPY_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDE_RCPPSW_ALGORITHM_CLUSTERING_ENTROPY_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>Includes</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rcppsw_8hpp" kindref="compound">rcppsw/rcppsw.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="client_8hpp" kindref="compound">rcppsw/er/client.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cluster_8hpp" kindref="compound">rcppsw/algorithm/clustering/cluster.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="time__utils_8h.html" kindref="compound" external="/home/jharwell/git/rcppsw/build/docs/rcsw/RCSW.tag">rcsw/utils/time_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="eh__clustering__impl_8hpp" kindref="compound">rcppsw/algorithm/clustering/eh_clustering_impl.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="range_8hpp" kindref="compound">rcppsw/math/range.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ientropy_8hpp" kindref="compound">rcppsw/math/ientropy.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>Namespaces/Decls</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="common_2macros_8hpp_1a553c4f9d95d9ac867c32675925e86368" kindref="member">NS_START</ref>(<ref refid="namespacercppsw" kindref="compound">rcppsw</ref>,<sp/>algorithm,<sp/>clustering);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>Class<sp/>Definitions</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>******************************************************************************/</highlight></codeline>
<codeline lineno="68"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">entropy_balch2000<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>er::client&lt;entropy_balch2000&lt;T&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>cluster_vector<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>base_clustering_impl&lt;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/>T,</highlight></codeline>
<codeline lineno="73" refid="classrcppsw_1_1algorithm_1_1clustering_1_1entropy__balch2000" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><ref refid="classrcppsw_1_1algorithm_1_1clustering_1_1policy_1_1EH" kindref="compound">policy::EH</ref>&gt;<ref refid="classrcppsw_1_1algorithm_1_1clustering_1_1entropy__balch2000_1a85372f4788bada11f448caa66f2889a1" kindref="member">::cluster_vector</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classrcppsw_1_1algorithm_1_1clustering_1_1entropy__balch2000_1a1cb2d57a57d667a57df66a4b3ec4b46d" kindref="member">dist_calc_ftype</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classrcppsw_1_1algorithm_1_1clustering_1_1base__clustering__impl" kindref="compound">base_clustering_impl</ref>&lt;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>T,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrcppsw_1_1algorithm_1_1clustering_1_1policy_1_1EH" kindref="compound">policy::EH</ref>&gt;<ref refid="classrcppsw_1_1algorithm_1_1clustering_1_1entropy__balch2000_1a1cb2d57a57d667a57df66a4b3ec4b46d" kindref="member">::dist_calc_ftype</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classrcppsw_1_1algorithm_1_1clustering_1_1entropy__balch2000_1a2d6474261036ecab5026eb5830f5e4d2" kindref="member">membership_map</ref><sp/>=<sp/>std::map&lt;double,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacercppsw_1_1algorithm_1_1clustering_1ae4bdc3c1b255447703e70a19e7c90aef" kindref="member">membership_type&lt;policy::EH&gt;</ref>&gt;;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classrcppsw_1_1algorithm_1_1clustering_1_1entropy__balch2000_1a72bbfc8437ba58a167118b6032850395" kindref="member">membership_vector</ref><sp/>=<sp/>std::vector&lt;membership_type&lt;policy::EH&gt;&gt;;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classrcppsw_1_1algorithm_1_1clustering_1_1entropy__balch2000_1a2d6474261036ecab5026eb5830f5e4d2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classrcppsw_1_1algorithm_1_1clustering_1_1entropy__balch2000" kindref="compound">entropy_balch2000</ref>(std::unique_ptr&lt;<ref refid="classrcppsw_1_1algorithm_1_1clustering_1_1eh__clustering__impl" kindref="compound">eh_clustering_impl&lt;T&gt;</ref>&gt;<sp/>impl,</highlight></codeline>
<codeline lineno="89" refid="classrcppsw_1_1algorithm_1_1clustering_1_1entropy__balch2000_1a72bbfc8437ba58a167118b6032850395" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcppsw_1_1math_1_1range" kindref="compound">math::ranged</ref>&amp;<sp/>horizon,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>horizon_delta)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="client_8hpp_1a2e46a4046efab8f06e9e8316c5760a4d" kindref="member">ER_CLIENT_INIT</ref>(</highlight><highlight class="stringliteral">&quot;rcppsw.algorithm.clustering.entropy_balch2000&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mc_horizon(horizon),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mc_horizon_delta(horizon_delta),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_impl(std::move(impl))<sp/>{}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>run(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;&amp;<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dist_calc_ftype&amp;<sp/>dist_func)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="er_2macros_8hpp_1adcf63ebd51cba1bf7ec00484800bd728" kindref="member">ER_INFO</ref>(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>m_data<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>You<sp/>can&apos;t<sp/>use<sp/>reserve()<sp/>here,<sp/>as<sp/>that<sp/>just<sp/>allocates<sp/>data<sp/>without</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>initialization,<sp/>which<sp/>is<sp/>needed<sp/>to<sp/>mimic<sp/>initializing<sp/>membership<sp/>arrays</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>in<sp/>the<sp/>constructor.</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>m_membership.assign(m_data.size(),</highlight></codeline>
<codeline lineno="110" refid="classrcppsw_1_1algorithm_1_1clustering_1_1entropy__balch2000_1aa90a6d33e455efe1839e2040d17c92c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(m_membership)::value_type());</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>m_membership_cp.assign(m_data.size(),</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(m_membership_cp)::value_type());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>m_impl-&gt;initialize(&amp;m_data,<sp/>&amp;m_membership);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>m_clusters<sp/>=<sp/>clusters_init();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_accum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e_accum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>entropy_h_1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_iter<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((mc_horizon.span()<sp/>/<sp/>mc_horizon_delta))<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="er_2macros_8hpp_1adcf63ebd51cba1bf7ec00484800bd728" kindref="member">ER_INFO</ref>(</highlight><highlight class="stringliteral">&quot;Begin<sp/>n_datapoints=%zu,horizon=%s,delta=%f,n_iter=%zu&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_clusters.size(),</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mc_horizon.to_str().c_str(),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mc_horizon_delta,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_iter);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>iterate<sp/>through<sp/>all<sp/>horizons<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_iter;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start<sp/>=<sp/><ref refid="time__utils_8h_1a45b016f1122e07fce3e3881ecafd697b" kindref="member" external="/home/jharwell/git/rcppsw/build/docs/rcsw/RCSW.tag">time_monotonic_sec</ref>();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>horizon<sp/>=<sp/>mc_horizon.lb()<sp/>+<sp/>i*<sp/>mc_horizon_delta;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>entropy_h<sp/>=<sp/>balch2000_iter(dist_func,<sp/>horizon);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>end<sp/>=<sp/><ref refid="time__utils_8h_1a45b016f1122e07fce3e3881ecafd697b" kindref="member" external="/home/jharwell/git/rcppsw/build/docs/rcsw/RCSW.tag">time_monotonic_sec</ref>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::fabs(entropy_h<sp/>-<sp/>entropy_h_1)<sp/>&lt;=<sp/><ref refid="namespacercppsw_1_1math_1a3de3b99c93e96d09928476864d7ecf59" kindref="member">rmath::kDOUBLE_EPSILON</ref>)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="er_2macros_8hpp_1a8fd8dc21eb70bd0c45fc5f2921a33b09" kindref="member">ER_WARN</ref>(</highlight><highlight class="stringliteral">&quot;Redundant<sp/>entropy<sp/>%f:<sp/>horizon=%f&quot;</highlight><highlight class="normal">,<sp/>entropy_h,<sp/>horizon);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e_accum<sp/>+=<sp/>entropy_h;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="er_2macros_8hpp_1aca509f60c625066554367ccf8150e10b" kindref="member">ER_DEBUG</ref>(</highlight><highlight class="stringliteral">&quot;Horizon=%f:<sp/>time=%.8fms,entropy=%f&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>horizon,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(end<sp/>-<sp/>start)<sp/>*<sp/>1000,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entropy_h);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>entropy_h_1<sp/>=<sp/>entropy_h;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t_accum<sp/>+=<sp/>end<sp/>-<sp/>start;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>for(i..)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="er_2macros_8hpp_1adcf63ebd51cba1bf7ec00484800bd728" kindref="member">ER_INFO</ref>(</highlight><highlight class="stringliteral">&quot;Finish:<sp/>time=%0.04fs,entropy=%f&quot;</highlight><highlight class="normal">,<sp/>t_accum,<sp/>e_accum);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e_accum;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>run()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>cluster_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>base_clustering_impl&lt;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/>T,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/>policy::EH&gt;::cluster_type;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>cluster_vector<sp/>clusters_init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>cluster_vector<sp/>clusters;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_data.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clusters.emplace_back(cluster_type(i,<sp/>m_data,<sp/>m_membership));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>for(i..)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clusters;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>balch2000_iter(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dist_calc_ftype&amp;<sp/>dist_func,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>horizon)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>m_impl-&gt;horizon(horizon);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>m_impl-&gt;<ref refid="classrcppsw_1_1algorithm_1_1clustering_1_1base__clustering__impl_1a57b1d1b0a37630e02f8c0bbf49679c42" kindref="member">iterate</ref>(m_data,<sp/>dist_func,<sp/>&amp;m_clusters);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>m_impl-&gt;post_iter_update(&amp;m_clusters);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Make<sp/>a<sp/>copy<sp/>to<sp/>prevent<sp/>permanently<sp/>deleting<sp/>clusters<sp/>that<sp/>may<sp/>be</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>duplicates<sp/>for<sp/>THIS<sp/>horizon,<sp/>but<sp/>may<sp/>not<sp/>for<sp/>a<sp/>future<sp/>horizon<sp/>value.</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>m_membership_cp<sp/>=<sp/>m_membership;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>balch2000_rm_dup_clusters(&amp;m_membership_cp);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>proportions(m_membership_cp.size());</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>proportions.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prop<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(m_membership_cp[i].size())<sp/>/</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data.size();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="er_2macros_8hpp_1a8973874d9049f2fb8e3c6b7c3d8a981e" kindref="member">ER_TRACE</ref>(</highlight><highlight class="stringliteral">&quot;cluster@%zu<sp/>size=%zu,<sp/>prop=%f&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_membership_cp[i].size(),</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prop);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>proportions[i]<sp/>=<sp/>prop;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>for(i..)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>math::ientropy()(proportions);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>balch2000_rm_dup_clusters(membership_type&lt;policy::EH&gt;*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>clusters)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="er_2macros_8hpp_1a8973874d9049f2fb8e3c6b7c3d8a981e" kindref="member">ER_TRACE</ref>(</highlight><highlight class="stringliteral">&quot;Removing<sp/>duplicate<sp/>clusters&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>each<sp/>datapoint/cluster<sp/>in<sp/>a<sp/>given<sp/>iteration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>clusters-&gt;size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="er_2macros_8hpp_1a8973874d9049f2fb8e3c6b7c3d8a981e" kindref="member">ER_TRACE</ref>(</highlight><highlight class="stringliteral">&quot;cluster%zu:<sp/>n_members=%zu&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>(*clusters)[i].size());</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_set&lt;size_t&gt;&amp;<sp/>cluster_i<sp/>=<sp/>(*clusters)[i];</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>comp<sp/>=<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>clust)<sp/><ref refid="common_2macros_8hpp_1a080d8af20d6aa955d4db7ef068309a7c" kindref="member">RCPPSW_PURE</ref><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Duplicates<sp/>are<sp/>defined<sp/>as<sp/>two<sp/>of<sp/>the<sp/>unordered<sp/>membership<sp/>sets</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>containing<sp/>the<sp/>same<sp/>points<sp/>AND<sp/>the<sp/>sets<sp/>not<sp/>being<sp/>in<sp/>the<sp/>same<sp/>index</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>in<sp/>the<sp/>vector<sp/>of<sp/>results<sp/>(i.e.<sp/>not<sp/>self<sp/>equality).</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cluster_i<sp/>==<sp/>clust<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;clust<sp/>-<sp/>&amp;((*clusters)[0]))<sp/>!=<sp/>i;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rm<sp/>=<sp/>std::remove_if(clusters-&gt;begin(),<sp/>clusters-&gt;end(),<sp/>comp);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clusters-&gt;erase(rm,<sp/>clusters-&gt;end());</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>for(i..)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>clang-format<sp/>off<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacercppsw_1_1math_1a5ff0a4d528d5429045da4f1d3fd382f2" kindref="member">math::ranged</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mc_horizon;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mc_horizon_delta;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>std::vector&lt;T&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data{};</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>membership_type&lt;policy::EH&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_membership{};</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>membership_type&lt;policy::EH&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_membership_cp{};</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>cluster_vector<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_clusters{};</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;eh_clustering_impl&lt;T&gt;&gt;<sp/>m_impl;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>clang-format<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal">};</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><ref refid="common_2macros_8hpp_1af6c55b58384045452cc8ce88f54e3265" kindref="member">NS_END</ref>(clustering,<sp/>algorithm,<sp/><ref refid="namespacercppsw" kindref="compound">rcppsw</ref>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDE_RCPPSW_ALGORITHM_CLUSTERING_ENTROPY_HPP_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/jharwell/git/rcppsw/include/rcppsw/algorithm/clustering/entropy.hpp"/>
  </compounddef>
</doxygen>
