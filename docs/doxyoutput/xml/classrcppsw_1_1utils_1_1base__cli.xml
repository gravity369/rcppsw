<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrcppsw_1_1utils_1_1base__cli" kind="class" language="C++" prot="public">
    <compoundname>rcppsw::utils::base_cli</compoundname>
    <includes refid="base__cli_8hpp" local="no">base_cli.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrcppsw_1_1utils_1_1base__cli_1abb666153d292745ae22921076b0cdff7" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string rcppsw::utils::base_cli::m_base_output_dir</definition>
        <argsstring></argsstring>
        <name>m_base_output_dir</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/utils/base_cli.hpp" line="106" column="28" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/utils/base_cli.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrcppsw_1_1utils_1_1base__cli_1a0f9d34aada41ff47b0fda423742f225b" prot="private" static="no" mutable="no">
        <type>bpo::options_description</type>
        <definition>bpo::options_description rcppsw::utils::base_cli::m_desc</definition>
        <argsstring></argsstring>
        <name>m_desc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/utils/base_cli.hpp" line="104" column="28" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/utils/base_cli.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrcppsw_1_1utils_1_1base__cli_1af73363a391bf68452d2422d45e0f80cd" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string rcppsw::utils::base_cli::m_prog_name</definition>
        <argsstring></argsstring>
        <name>m_prog_name</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/utils/base_cli.hpp" line="105" column="28" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/utils/base_cli.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrcppsw_1_1utils_1_1base__cli_1abfad381378569d29cdb70a5cfe5cddb1" prot="private" static="no" mutable="no">
        <type>bpo::variables_map</type>
        <definition>bpo::variables_map rcppsw::utils::base_cli::m_vm</definition>
        <argsstring></argsstring>
        <name>m_vm</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/utils/base_cli.hpp" line="103" column="28" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/utils/base_cli.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrcppsw_1_1utils_1_1base__cli_1a3424a155f9bb0f727958244b65136d7f" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>rcppsw::utils::base_cli::base_cli</definition>
        <argsstring>(const std::string &amp;mnemonic=&quot;&quot;)</argsstring>
        <name>base_cli</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>mnemonic</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/utils/base_cli.hpp" line="54" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1utils_1_1base__cli_1afaef0b6cca6f61adcb2085d5601d9915" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual rcppsw::utils::base_cli::~base_cli</definition>
        <argsstring>(void)=default</argsstring>
        <name>~base_cli</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/utils/base_cli.hpp" line="55" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1utils_1_1base__cli_1a09d0b7b6202e3f2d631c322453bd1ffa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bpo::options_description *</type>
        <definition>bpo::options_description* rcppsw::utils::base_cli::desc</definition>
        <argsstring>(void)</argsstring>
        <name>desc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get a handle on the options description. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The variables map handle. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/utils/base_cli.hpp" line="92" column="28" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/utils/base_cli.hpp" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1utils_1_1base__cli_1a365b9d4a1cda3766c4b2966986eabd53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="types_8h_1af9bff8ff1154a04a899276af806b8586" kindref="member" external="/home/jharwell/git/rcppsw/build/docs/rcsw/RCSW.tag">status_t</ref></type>
        <definition>status_t rcppsw::utils::base_cli::parse</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>parse</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Parse command line options. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>The argc from main(). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>The argv from main().</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="types_8h_1af9bff8ff1154a04a899276af806b8586" kindref="member" external="/home/jharwell/git/rcppsw/build/docs/rcsw/RCSW.tag">status_t</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/utils/base_cli.hpp" line="65" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1utils_1_1base__cli_1a4ca33620ef34f2f572be84bf8750110f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rcppsw::utils::base_cli::print</definition>
        <argsstring>(void)</argsstring>
        <name>print</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Print all options and their help to stdout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/utils/base_cli.hpp" line="78" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1utils_1_1base__cli_1a75bc985d3cb5b9ccf5b91c1a8ca42a31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; rcppsw::utils::base_cli::prog_name</definition>
        <argsstring>(void)</argsstring>
        <name>prog_name</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the program name. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The program name. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/utils/base_cli.hpp" line="99" column="21" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/utils/base_cli.hpp" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1utils_1_1base__cli_1aa92da8272f44010d76970ef2ce2c7551" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool rcppsw::utils::base_cli::validate</definition>
        <argsstring>(void)</argsstring>
        <name>validate</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Determine if parameters passed are valid, by some criterion. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>TRUE</computeroutput> if the condition is met, and <computeroutput>FALSE</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/utils/base_cli.hpp" line="73" column="16" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/utils/base_cli.hpp" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1utils_1_1base__cli_1a08d227d102563a23cf7f3d6bb56dc933" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const bpo::variables_map &amp;</type>
        <definition>const bpo::variables_map&amp; rcppsw::utils::base_cli::vm</definition>
        <argsstring>(void)</argsstring>
        <name>vm</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get a handle on the variables map. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The variables map handle. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/utils/base_cli.hpp" line="85" column="28" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/utils/base_cli.hpp" bodystart="85" bodyend="85"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for command line interfaces. Uses boost to do the actual parsing. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>rcppsw::utils::base_cli</label>
        <link refid="classrcppsw_1_1utils_1_1base__cli"/>
      </node>
    </collaborationgraph>
    <location file="/home/jharwell/git/rcppsw/include/rcppsw/utils/base_cli.hpp" line="52" column="15" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/utils/base_cli.hpp" bodystart="52" bodyend="108"/>
    <listofallmembers>
      <member refid="classrcppsw_1_1utils_1_1base__cli_1a3424a155f9bb0f727958244b65136d7f" prot="public" virt="non-virtual"><scope>rcppsw::utils::base_cli</scope><name>base_cli</name></member>
      <member refid="classrcppsw_1_1utils_1_1base__cli_1a09d0b7b6202e3f2d631c322453bd1ffa" prot="public" virt="non-virtual"><scope>rcppsw::utils::base_cli</scope><name>desc</name></member>
      <member refid="classrcppsw_1_1utils_1_1base__cli_1abb666153d292745ae22921076b0cdff7" prot="private" virt="non-virtual"><scope>rcppsw::utils::base_cli</scope><name>m_base_output_dir</name></member>
      <member refid="classrcppsw_1_1utils_1_1base__cli_1a0f9d34aada41ff47b0fda423742f225b" prot="private" virt="non-virtual"><scope>rcppsw::utils::base_cli</scope><name>m_desc</name></member>
      <member refid="classrcppsw_1_1utils_1_1base__cli_1af73363a391bf68452d2422d45e0f80cd" prot="private" virt="non-virtual"><scope>rcppsw::utils::base_cli</scope><name>m_prog_name</name></member>
      <member refid="classrcppsw_1_1utils_1_1base__cli_1abfad381378569d29cdb70a5cfe5cddb1" prot="private" virt="non-virtual"><scope>rcppsw::utils::base_cli</scope><name>m_vm</name></member>
      <member refid="classrcppsw_1_1utils_1_1base__cli_1a365b9d4a1cda3766c4b2966986eabd53" prot="public" virt="non-virtual"><scope>rcppsw::utils::base_cli</scope><name>parse</name></member>
      <member refid="classrcppsw_1_1utils_1_1base__cli_1a4ca33620ef34f2f572be84bf8750110f" prot="public" virt="non-virtual"><scope>rcppsw::utils::base_cli</scope><name>print</name></member>
      <member refid="classrcppsw_1_1utils_1_1base__cli_1a75bc985d3cb5b9ccf5b91c1a8ca42a31" prot="public" virt="non-virtual"><scope>rcppsw::utils::base_cli</scope><name>prog_name</name></member>
      <member refid="classrcppsw_1_1utils_1_1base__cli_1aa92da8272f44010d76970ef2ce2c7551" prot="public" virt="virtual"><scope>rcppsw::utils::base_cli</scope><name>validate</name></member>
      <member refid="classrcppsw_1_1utils_1_1base__cli_1a08d227d102563a23cf7f3d6bb56dc933" prot="public" virt="non-virtual"><scope>rcppsw::utils::base_cli</scope><name>vm</name></member>
      <member refid="classrcppsw_1_1utils_1_1base__cli_1afaef0b6cca6f61adcb2085d5601d9915" prot="public" virt="virtual"><scope>rcppsw::utils::base_cli</scope><name>~base_cli</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
