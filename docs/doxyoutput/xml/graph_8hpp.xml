<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="graph_8hpp" kind="file" language="C++">
    <compoundname>graph.hpp</compoundname>
    <includes local="no">boost/graph/adjacency_list.hpp</includes>
    <includes local="no">boost/optional.hpp</includes>
    <includes local="no">boost/range/adaptor/transformed.hpp</includes>
    <includes refid="rcppsw_8hpp" local="yes">rcppsw/rcppsw.hpp</includes>
    <includes refid="vector3_8hpp" local="yes">rcppsw/math/vector3.hpp</includes>
    <includedby refid="directed__graph_8hpp" local="yes">/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/directed_graph.hpp</includedby>
    <includedby refid="graphml_8hpp" local="yes">/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graphml.hpp</includedby>
    <includedby refid="hgrid3D_8hpp" local="yes">/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/hgrid3D.hpp</includedby>
    <includedby refid="hgrid3D__view_8hpp" local="yes">/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/hgrid3D_view.hpp</includedby>
    <includedby refid="hgrid3D__view__builder_8hpp" local="yes">/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/hgrid3D_view_builder.hpp</includedby>
    <includedby refid="hgrid3D__view__filter_8hpp" local="yes">/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/hgrid3D_view_filter.hpp</includedby>
    <incdepgraph>
      <node id="37">
        <label>rcppsw/math/math.hpp</label>
        <link refid="math_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>limits</label>
      </node>
      <node id="39">
        <label>rcppsw/math/sphere_vector.hpp</label>
        <link refid="sphere__vector_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>boost/stacktrace.hpp</label>
      </node>
      <node id="21">
        <label>log4cxx/fileappender.h</label>
      </node>
      <node id="11">
        <label>rcppsw/math/vector3.hpp</label>
        <link refid="vector3_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>rcsw/common/common.h</label>
        <link refid="common_8h.html" external="/home/jharwell/git/rcppsw/build/docs/rcsw/RCSW.tag"/>
      </node>
      <node id="40">
        <label>rcppsw/math/vector2.hpp</label>
        <link refid="vector2_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>rcppsw/common/common.hpp</label>
        <link refid="common_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>rcppsw/utils/string_utils.hpp</label>
        <link refid="string__utils_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>log4cxx/xml/domconfigurator.h</label>
      </node>
      <node id="12">
        <label>cmath</label>
      </node>
      <node id="30">
        <label>cassert</label>
      </node>
      <node id="27">
        <label>rcppsw/er/stacktrace.hpp</label>
        <link refid="stacktrace_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="15">
        <label>rcppsw/math/range.hpp</label>
        <link refid="range_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>boost/range/adaptor/transformed.hpp</label>
      </node>
      <node id="24">
        <label>log4cxx/patternlayout.h</label>
      </node>
      <node id="5">
        <label>rcppsw/rcppsw.hpp</label>
        <link refid="rcppsw_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>log4cxx/ndc.h</label>
      </node>
      <node id="20">
        <label>log4cxx/consoleappender.h</label>
      </node>
      <node id="18">
        <label>rcppsw/er/er.hpp</label>
        <link refid="er_8hpp"/>
      </node>
      <node id="10">
        <label>rcppsw/mpl/mpl.hpp</label>
        <link refid="mpl_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>vector</label>
      </node>
      <node id="36">
        <label>rcppsw/er/stringizable.hpp</label>
        <link refid="stringizable_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>utility</label>
      </node>
      <node id="29">
        <label>array</label>
      </node>
      <node id="34">
        <label>sstream</label>
      </node>
      <node id="14">
        <label>rcppsw/math/radians.hpp</label>
        <link refid="radians_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>iosfwd</label>
      </node>
      <node id="31">
        <label>iostream</label>
      </node>
      <node id="9">
        <label>rcppsw/common/macros.hpp</label>
        <link refid="common_2macros_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>rcppsw/types/discretize_ratio.hpp</label>
        <link refid="discretize__ratio_8hpp"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>boost/optional.hpp</label>
      </node>
      <node id="17">
        <label>rcppsw/er/client.hpp</label>
        <link refid="client_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>type_traits</label>
      </node>
      <node id="2">
        <label>boost/graph/adjacency_list.hpp</label>
      </node>
      <node id="26">
        <label>rcppsw/er/macros.hpp</label>
        <link refid="er_2macros_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>log4cxx/logger.h</label>
      </node>
      <node id="42">
        <label>rcppsw/types/named_type.hpp</label>
        <link refid="named__type_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graphml.hpp</label>
        <link refid="graphml_8hpp"/>
      </node>
      <node id="4">
        <label>/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/hgrid3D.hpp</label>
        <link refid="hgrid3D_8hpp"/>
      </node>
      <node id="5">
        <label>/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/hgrid3D_view.hpp</label>
        <link refid="hgrid3D__view_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/directed_graph.hpp</label>
        <link refid="directed__graph_8hpp"/>
      </node>
      <node id="6">
        <label>/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/hgrid3D_view_builder.hpp</label>
        <link refid="hgrid3D__view__builder_8hpp"/>
      </node>
      <node id="7">
        <label>/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/hgrid3D_view_filter.hpp</label>
        <link refid="hgrid3D__view__filter_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacercppsw">rcppsw</innernamespace>
    <innernamespace refid="namespacercppsw_1_1ds">rcppsw::ds</innernamespace>
    <innernamespace refid="namespacercppsw_1_1ds_1_1graph">rcppsw::ds::graph</innernamespace>
    <innernamespace refid="namespacercppsw_1_1ds_1_1graph_1_1detail">rcppsw::ds::graph::detail</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="graph_8hpp_1a728ba2f07edc3a2f9de61e879884274a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TBGLGraphType</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto add_edge</definition>
        <argsstring>(TBGLGraphType &amp;g, typename TBGLGraphType::vertex_descriptor u, typename TBGLGraphType::vertex_descriptor v)</argsstring>
        <name>add_edge</name>
        <param>
          <type>TBGLGraphType &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>typename TBGLGraphType::vertex_descriptor</type>
          <declname>u</declname>
        </param>
        <param>
          <type>typename TBGLGraphType::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" line="105" column="20" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" bodystart="105" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a6f1130cb6bca74a465baf0c8575b7250" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TBGLGraphType</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto add_vertex</definition>
        <argsstring>(TBGLGraphType &amp;g)</argsstring>
        <name>add_vertex</name>
        <param>
          <type>TBGLGraphType &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" line="95" column="20" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a2b1e5f47a4374b0b9fa3b25436eae969" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TBGLGraphType</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto adjacent_vertices</definition>
        <argsstring>(const TBGLGraphType &amp;g, typename TBGLGraphType::vertex_descriptor v)</argsstring>
        <name>adjacent_vertices</name>
        <param>
          <type>const TBGLGraphType &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>typename TBGLGraphType::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" line="89" column="20" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1ab90eab37470416a242c969f02bde4a2a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TBGLGraphType</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool contains</definition>
        <argsstring>(const TBGLGraphType &amp;g, const rmath::vector3z &amp;c)</argsstring>
        <name>contains</name>
        <param>
          <type>const TBGLGraphType &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const <ref refid="namespacercppsw_1_1math_1a72e9a2c7f7fb0b33f22a664371912a36" kindref="member">rmath::vector3z</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Determine if <computeroutput>g</computeroutput> contains a vertex with coordinates <computeroutput>c</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" line="135" column="20" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" bodystart="135" bodyend="137"/>
        <references refid="graph_8hpp_1a2b2d4d13c8b1fc4fb15e97c21264a80b" compoundref="graph_8hpp" startline="117" endline="129">find</references>
        <referencedby refid="classrcppsw_1_1ds_1_1base__grid2D_1a96a44cd104539a2f681558d8f20aa4c4" compoundref="base__grid2D_8hpp" startline="98" endline="100">rcppsw::ds::base_grid2D&lt; ral::mt_size_t &gt;::contains</referencedby>
        <referencedby refid="classrcppsw_1_1ds_1_1base__grid3D_1aab1aa33a5733948556a87562d27656e6" compoundref="base__grid3D_8hpp" startline="99" endline="101">rcppsw::ds::base_grid3D&lt; ral::mt_size_t &gt;::contains</referencedby>
        <referencedby refid="classrcppsw_1_1math_1_1range_1a935c2fb3c1f164d146619bfc573d5e6c" compoundref="range_8hpp" startline="154" endline="157">rcppsw::math::range&lt; coord_value_type &gt;::contains</referencedby>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a2b2d4d13c8b1fc4fb15e97c21264a80b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TBGLGraphType</type>
          </param>
          <param>
            <type>typename TCoordType</type>
          </param>
        </templateparamlist>
        <type>boost::optional&lt; typename TBGLGraphType::vertex_descriptor &gt;</type>
        <definition>static boost::optional&lt;typename TBGLGraphType::vertex_descriptor&gt; find</definition>
        <argsstring>(const TBGLGraphType &amp;g, const TCoordType &amp;c)</argsstring>
        <name>find</name>
        <param>
          <type>const TBGLGraphType &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const TCoordType &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Search for the vertex with coordinates <computeroutput>c</computeroutput> in <computeroutput>g</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The descriptor of the matching vertex, or -1 if not found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" line="117" column="31" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" bodystart="117" bodyend="129"/>
        <references refid="graph_8hpp_1abc02a164df941675b9b395bfd9d54a30" compoundref="graph_8hpp" startline="57" endline="59">vertices</references>
        <referencedby refid="graph_8hpp_1ab90eab37470416a242c969f02bde4a2a" compoundref="graph_8hpp" startline="135" endline="137">contains</referencedby>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a2a17a8cdf486ffc7a07c462721e565f9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TBGLGraphType</type>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>static size_t n_vertices</definition>
        <argsstring>(const TBGLGraphType &amp;g)</argsstring>
        <name>n_vertices</name>
        <param>
          <type>const TBGLGraphType &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>Get the # of vertices in <computeroutput>g</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" line="143" column="22" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1ad9231fc8acb48c67c0baaf2e1dc25938" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TBGLGraphType</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto out_degree</definition>
        <argsstring>(const TBGLGraphType &amp;g, const typename TBGLGraphType::vertex_descriptor &amp;v)</argsstring>
        <name>out_degree</name>
        <param>
          <type>const TBGLGraphType &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const typename TBGLGraphType::vertex_descriptor &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" line="77" column="20" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1aaa3f849f6d4a554ba04b592f4992118a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TBGLGraphType</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto out_edges</definition>
        <argsstring>(const TBGLGraphType &amp;g, const typename TBGLGraphType::vertex_descriptor &amp;v)</argsstring>
        <name>out_edges</name>
        <param>
          <type>const TBGLGraphType &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const typename TBGLGraphType::vertex_descriptor &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" line="71" column="20" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a5b1771af2778d689f0dc497c8911ce1d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TBGLGraphType</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto remove_vertex</definition>
        <argsstring>(TBGLGraphType &amp;g, typename TBGLGraphType::vertex_descriptor v)</argsstring>
        <name>remove_vertex</name>
        <param>
          <type>TBGLGraphType &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>typename TBGLGraphType::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" line="99" column="20" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1abef0e24d8523e68c5460191be4752557" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TBGLGraphType</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto target</definition>
        <argsstring>(const TBGLGraphType &amp;g, const typename TBGLGraphType::edge_descriptor &amp;e)</argsstring>
        <name>target</name>
        <param>
          <type>const TBGLGraphType &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const typename TBGLGraphType::edge_descriptor &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" line="83" column="20" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1aaf6a1c472f03c01dcea6deae69f7fe69" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TBGLGraphType</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto vertex_properties</definition>
        <argsstring>(const TBGLGraphType &amp;g)</argsstring>
        <name>vertex_properties</name>
        <param>
          <type>const TBGLGraphType &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" line="62" column="20" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" bodystart="62" bodyend="68"/>
        <references refid="graph_8hpp_1abc02a164df941675b9b395bfd9d54a30" compoundref="graph_8hpp" startline="57" endline="59">vertices</references>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1abc02a164df941675b9b395bfd9d54a30" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TBGLGraphType</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto vertices</definition>
        <argsstring>(const TBGLGraphType &amp;g) -&gt; decltype(boost::vertices(std::declval&lt; const TBGLGraphType &gt;()))</argsstring>
        <name>vertices</name>
        <param>
          <type>const TBGLGraphType &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>Get the vertices in the specified graph, as an iterator range. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>We can&apos;t use boost::make_iterator_range here, because that doesn&apos;t work with filtered_graph types, for whatever reason. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" line="57" column="20" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp" bodystart="57" bodyend="59"/>
        <referencedby refid="graph_8hpp_1a2b2d4d13c8b1fc4fb15e97c21264a80b" compoundref="graph_8hpp" startline="117" endline="129">find</referencedby>
        <referencedby refid="graph_8hpp_1aaf6a1c472f03c01dcea6deae69f7fe69" compoundref="graph_8hpp" startline="62" endline="68">vertex_properties</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>2021 John Harwell, All rights reserved.</para>
</simplesect>
This file is part of RCPPSW.</para>
<para>RCPPSW is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.</para>
<para>RCPPSW is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</para>
<para>You should have received a copy of the GNU General Public License along with RCPPSW. If not, see &lt;<ulink url="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</ulink> </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="21"><highlight class="preprocessor">#ifndef<sp/>INCLUDE_RCPPSW_DS_GRAPH_GRAPH_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDE_RCPPSW_DS_GRAPH_GRAPH_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>Includes</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/graph/adjacency_list.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/optional.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/range/adaptor/transformed.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rcppsw_8hpp" kindref="compound">rcppsw/rcppsw.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vector3_8hpp" kindref="compound">rcppsw/math/vector3.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>Namespaces/Decls</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="namespacercppsw_1_1ds_1_1graph_1_1detail" refkind="compound"><highlight class="normal"><ref refid="common_2macros_8hpp_1a553c4f9d95d9ac867c32675925e86368" kindref="member">NS_START</ref>(<ref refid="namespacercppsw" kindref="compound">rcppsw</ref>,<sp/>ds,<sp/>graph,<sp/>detail);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TBGLGraphType&gt;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacercppsw_1_1ds_1_1graph_1_1detail_1a2c9bda01f8c338e7729fe49a9bedb89c" kindref="member">find_result_type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::add_pointer&lt;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>decltype(std::declval&lt;TBGLGraphType&gt;().</highlight><highlight class="keyword">operator</highlight><highlight class="normal">[](std::declval&lt;typename<sp/>TBGLGraphType::vertex_descriptor&gt;()))</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>&gt;::type;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="common_2macros_8hpp_1af6c55b58384045452cc8ce88f54e3265" kindref="member">NS_END</ref>(detail);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="namespacercppsw_1_1ds_1_1graph_1_1detail_1a2c9bda01f8c338e7729fe49a9bedb89c" refkind="member"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>Templates</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TBGLGraphType&gt;</highlight></codeline>
<codeline lineno="57" refid="graph_8hpp_1abc02a164df941675b9b395bfd9d54a30" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="graph_8hpp_1abc02a164df941675b9b395bfd9d54a30" kindref="member">vertices</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TBGLGraphType&amp;<sp/>g)<sp/>-&gt;<sp/>decltype(<ref refid="graph_8hpp_1abc02a164df941675b9b395bfd9d54a30" kindref="member">boost::vertices</ref>(std::declval&lt;const<sp/>TBGLGraphType&gt;()))<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="graph_8hpp_1abc02a164df941675b9b395bfd9d54a30" kindref="member">boost::vertices</ref>(g);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TBGLGraphType&gt;</highlight></codeline>
<codeline lineno="62" refid="graph_8hpp_1aaf6a1c472f03c01dcea6deae69f7fe69" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="graph_8hpp_1aaf6a1c472f03c01dcea6deae69f7fe69" kindref="member">vertex_properties</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TBGLGraphType&amp;<sp/>g)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bundle_map<sp/>=<sp/>boost::get(boost::vertex_bundle,<sp/>g);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>accessor<sp/>=<sp/>[&amp;bundle_map](</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TBGLGraphType::vertex_descriptor<sp/>vd)<sp/>-&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bundle_map[vd];</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="graph_8hpp_1abc02a164df941675b9b395bfd9d54a30" kindref="member">boost::vertices</ref>(g)<sp/>|<sp/>boost::adaptors::transformed(accessor);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TBGLGraphType&gt;</highlight></codeline>
<codeline lineno="71" refid="graph_8hpp_1aaa3f849f6d4a554ba04b592f4992118a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="graph_8hpp_1aaa3f849f6d4a554ba04b592f4992118a" kindref="member">out_edges</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TBGLGraphType&amp;<sp/>g,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TBGLGraphType::vertex_descriptor&amp;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="graph_8hpp_1aaa3f849f6d4a554ba04b592f4992118a" kindref="member">boost::out_edges</ref>(v,<sp/>g);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TBGLGraphType&gt;</highlight></codeline>
<codeline lineno="77" refid="graph_8hpp_1ad9231fc8acb48c67c0baaf2e1dc25938" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="graph_8hpp_1ad9231fc8acb48c67c0baaf2e1dc25938" kindref="member">out_degree</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TBGLGraphType&amp;<sp/>g,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TBGLGraphType::vertex_descriptor&amp;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="graph_8hpp_1ad9231fc8acb48c67c0baaf2e1dc25938" kindref="member">boost::out_degree</ref>(v,<sp/>g);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TBGLGraphType&gt;</highlight></codeline>
<codeline lineno="83" refid="graph_8hpp_1abef0e24d8523e68c5460191be4752557" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="graph_8hpp_1abef0e24d8523e68c5460191be4752557" kindref="member">target</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TBGLGraphType&amp;<sp/>g,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TBGLGraphType::edge_descriptor&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="graph_8hpp_1abef0e24d8523e68c5460191be4752557" kindref="member">boost::target</ref>(e,<sp/>g);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TBGLGraphType&gt;</highlight></codeline>
<codeline lineno="89" refid="graph_8hpp_1a2b1e5f47a4374b0b9fa3b25436eae969" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="graph_8hpp_1a2b1e5f47a4374b0b9fa3b25436eae969" kindref="member">adjacent_vertices</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TBGLGraphType&amp;<sp/>g,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TBGLGraphType::vertex_descriptor<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="graph_8hpp_1a2b1e5f47a4374b0b9fa3b25436eae969" kindref="member">boost::adjacent_vertices</ref>(v,<sp/>g);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TBGLGraphType&gt;</highlight></codeline>
<codeline lineno="95" refid="graph_8hpp_1a6f1130cb6bca74a465baf0c8575b7250" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="graph_8hpp_1a6f1130cb6bca74a465baf0c8575b7250" kindref="member">add_vertex</ref>(TBGLGraphType&amp;<sp/>g)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="graph_8hpp_1a6f1130cb6bca74a465baf0c8575b7250" kindref="member">boost::add_vertex</ref>(g);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TBGLGraphType&gt;</highlight></codeline>
<codeline lineno="99" refid="graph_8hpp_1a5b1771af2778d689f0dc497c8911ce1d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="graph_8hpp_1a5b1771af2778d689f0dc497c8911ce1d" kindref="member">remove_vertex</ref>(TBGLGraphType&amp;<sp/>g,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TBGLGraphType::vertex_descriptor<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="graph_8hpp_1a5b1771af2778d689f0dc497c8911ce1d" kindref="member">boost::remove_vertex</ref>(v,<sp/>g);</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TBGLGraphType&gt;</highlight></codeline>
<codeline lineno="105" refid="graph_8hpp_1a728ba2f07edc3a2f9de61e879884274a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="graph_8hpp_1a728ba2f07edc3a2f9de61e879884274a" kindref="member">add_edge</ref>(TBGLGraphType&amp;<sp/>g,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TBGLGraphType::vertex_descriptor<sp/>u,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TBGLGraphType::vertex_descriptor<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="graph_8hpp_1a728ba2f07edc3a2f9de61e879884274a" kindref="member">boost::add_edge</ref>(u,<sp/>v,<sp/>g);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TBGLGraphType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TCoordType&gt;</highlight></codeline>
<codeline lineno="117" refid="graph_8hpp_1a2b2d4d13c8b1fc4fb15e97c21264a80b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>boost::optional&lt;typename<sp/>TBGLGraphType::vertex_descriptor&gt;<sp/><ref refid="graph_8hpp_1a2b2d4d13c8b1fc4fb15e97c21264a80b" kindref="member">find</ref>(</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TBGLGraphType&amp;<sp/>g,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCoordType&amp;<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[v_i,<sp/>v_end]<sp/>=<sp/><ref refid="graph_8hpp_1abc02a164df941675b9b395bfd9d54a30" kindref="member">boost::vertices</ref>(g);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>std::find_if<sp/>does<sp/>not<sp/>seem<sp/>to<sp/>work<sp/>with<sp/>filtered_graph<sp/>objects...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>v_i;<sp/>it<sp/>!=<sp/>v_end;<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g[*it].coord<sp/>==<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::make_optional(*it);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>(it...)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::none;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TBGLGraphType&gt;</highlight></codeline>
<codeline lineno="135" refid="graph_8hpp_1ab90eab37470416a242c969f02bde4a2a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="graph_8hpp_1ab90eab37470416a242c969f02bde4a2a" kindref="member">contains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TBGLGraphType&amp;<sp/>g,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrcppsw_1_1math_1_1vector3" kindref="compound">rmath::vector3z</ref>&amp;<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::none<sp/>!=<sp/><ref refid="graph_8hpp_1a2b2d4d13c8b1fc4fb15e97c21264a80b" kindref="member">rdgraph::find</ref>(g,<sp/>c);</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TBGLGraphType&gt;</highlight></codeline>
<codeline lineno="143" refid="graph_8hpp_1a2a17a8cdf486ffc7a07c462721e565f9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="graph_8hpp_1a2a17a8cdf486ffc7a07c462721e565f9" kindref="member">n_vertices</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TBGLGraphType&amp;<sp/>g)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::num_vertices(g);</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><ref refid="common_2macros_8hpp_1af6c55b58384045452cc8ce88f54e3265" kindref="member">NS_END</ref>(graph,<sp/>ds,<sp/><ref refid="namespacercppsw" kindref="compound">rcppsw</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDE_RCPPSW_DS_GRAPH_GRAPH_HPP_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/jharwell/git/rcppsw/include/rcppsw/ds/graph/graph.hpp"/>
  </compounddef>
</doxygen>
