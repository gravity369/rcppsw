<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrcppsw_1_1utils_1_1line__parser" kind="class" language="C++" prot="public">
    <compoundname>rcppsw::utils::line_parser</compoundname>
    <includes refid="line__parser_8hpp" local="no">line_parser.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrcppsw_1_1utils_1_1line__parser_1a9bd3d330cdd3aea7de04671308191bec" prot="private" static="no" mutable="no">
        <type>const char</type>
        <definition>const char rcppsw::utils::line_parser::mc_delim</definition>
        <argsstring></argsstring>
        <name>mc_delim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/utils/line_parser.hpp" line="87" column="14" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/utils/line_parser.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classrcppsw_1_1utils_1_1line__parser_1a5a1e25cc600f5b5185a606ef0442d943" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt;</type>
        <definition>static std::vector&lt;T&gt; rcppsw::utils::line_parser::as</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;v)</argsstring>
        <name>as</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/utils/line_parser.hpp" line="55" column="22" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/utils/line_parser.hpp" bodystart="55" bodyend="62"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrcppsw_1_1utils_1_1line__parser_1ae4a861a4a4136e2c676e55da681fbb12" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rcppsw::utils::line_parser::line_parser</definition>
        <argsstring>(char delim)</argsstring>
        <name>line_parser</name>
        <param>
          <type>char</type>
          <declname>delim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/utils/line_parser.hpp" line="64" column="12" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/utils/line_parser.hpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1utils_1_1line__parser_1a1d1209243bc995944e6841cba8ec4bd2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; rcppsw::utils::line_parser::operator()</definition>
        <argsstring>(const std::string &amp;line) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Parse a line into a vector of tokens, split on delimiter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/utils/line_parser.hpp" line="69" column="15" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/utils/line_parser.hpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classrcppsw_1_1utils_1_1line__parser_1ab46d9ab2e0502d17edeae098c3e9f403" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; rcppsw::utils::line_parser::operator()</definition>
        <argsstring>(std::stringstream &amp;ss) const</argsstring>
        <name>operator()</name>
        <param>
          <type>std::stringstream &amp;</type>
          <declname>ss</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/utils/line_parser.hpp" line="74" column="15" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/utils/line_parser.hpp" bodystart="74" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Parses a single line into a vector of tokens broken on the specified delimiter. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>rcppsw::utils::line_parser</label>
        <link refid="classrcppsw_1_1utils_1_1line__parser"/>
      </node>
    </collaborationgraph>
    <location file="/home/jharwell/git/rcppsw/include/rcppsw/utils/line_parser.hpp" line="52" column="18" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/utils/line_parser.hpp" bodystart="52" bodyend="89"/>
    <listofallmembers>
      <member refid="classrcppsw_1_1utils_1_1line__parser_1a5a1e25cc600f5b5185a606ef0442d943" prot="public" virt="non-virtual"><scope>rcppsw::utils::line_parser</scope><name>as</name></member>
      <member refid="classrcppsw_1_1utils_1_1line__parser_1ae4a861a4a4136e2c676e55da681fbb12" prot="public" virt="non-virtual"><scope>rcppsw::utils::line_parser</scope><name>line_parser</name></member>
      <member refid="classrcppsw_1_1utils_1_1line__parser_1a9bd3d330cdd3aea7de04671308191bec" prot="private" virt="non-virtual"><scope>rcppsw::utils::line_parser</scope><name>mc_delim</name></member>
      <member refid="classrcppsw_1_1utils_1_1line__parser_1a1d1209243bc995944e6841cba8ec4bd2" prot="public" virt="non-virtual"><scope>rcppsw::utils::line_parser</scope><name>operator()</name></member>
      <member refid="classrcppsw_1_1utils_1_1line__parser_1ab46d9ab2e0502d17edeae098c3e9f403" prot="public" virt="non-virtual"><scope>rcppsw::utils::line_parser</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
