<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classcollector__registerer" kind="class" language="C++" prot="public">
    <compoundname>collector_registerer</compoundname>
    <includes refid="collector__registerer_8hpp" local="no">collector_registerer.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename TSinkRegisterer</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcollector__registerer_1a014ee9272d4a4b2948cda6054a8100bf" prot="private" static="no" mutable="no">
        <type>TSinkRegisterer</type>
        <definition>TSinkRegisterer collector_registerer&lt; TSinkRegisterer &gt;::m_registerer</definition>
        <argsstring></argsstring>
        <name>m_registerer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/metrics/collector_registerer.hpp" line="327" column="19" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/metrics/collector_registerer.hpp" bodystart="327" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcollector__registerer_1aa21a1ca2703bf6bf3427ffc693cde40f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>collector_registerer&lt; TSinkRegisterer &gt;::collector_registerer</definition>
        <argsstring>(const collector_registerer &amp;)=default</argsstring>
        <name>collector_registerer</name>
        <param>
          <type>const <ref refid="classcollector__registerer" kindref="compound">collector_registerer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/metrics/collector_registerer.hpp" line="318" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classcollector__registerer_1aef35477265450319b1d64994802b1828" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>collector_registerer&lt; TSinkRegisterer &gt;::collector_registerer</definition>
        <argsstring>(const TSinkRegisterer &amp;&amp;registerer)</argsstring>
        <name>collector_registerer</name>
        <param>
          <type>const TSinkRegisterer &amp;&amp;</type>
          <declname>registerer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/metrics/collector_registerer.hpp" line="314" column="12" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/metrics/collector_registerer.hpp" bodystart="314" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classcollector__registerer_1a4ffed7d9fb35245f157db2e38b64fbe9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TPair</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void collector_registerer&lt; TSinkRegisterer &gt;::operator()</definition>
        <argsstring>(const TPair &amp;pair)</argsstring>
        <name>operator()</name>
        <param>
          <type>const TPair &amp;</type>
          <declname>pair</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/metrics/collector_registerer.hpp" line="321" column="8" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/metrics/collector_registerer.hpp" bodystart="321" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classcollector__registerer_1aaaa50fcb6c674313829ae64da78883e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcollector__registerer" kindref="compound">collector_registerer</ref> &amp;</type>
        <definition>collector_registerer&amp; collector_registerer&lt; TSinkRegisterer &gt;::operator=</definition>
        <argsstring>(const collector_registerer &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classcollector__registerer" kindref="compound">collector_registerer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jharwell/git/rcppsw/include/rcppsw/metrics/collector_registerer.hpp" line="317" column="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>After enabled collectors have been parsed from an XML input file, register the enabled collectors with a base_metrics_manager or a class derived from it. </para>
    </briefdescription>
    <detaileddescription>
<para>This is a separate class from collector_registerer_impl so you don&apos;t ALWAYS have to pass it a list of extra arguments for building some finicky metrics collectors. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>collector_registerer&lt; TSinkRegisterer &gt;</label>
        <link refid="classcollector__registerer"/>
      </node>
    </collaborationgraph>
    <location file="/home/jharwell/git/rcppsw/include/rcppsw/metrics/collector_registerer.hpp" line="312" column="27" bodyfile="/home/jharwell/git/rcppsw/include/rcppsw/metrics/collector_registerer.hpp" bodystart="312" bodyend="329"/>
    <listofallmembers>
      <member refid="classcollector__registerer_1aef35477265450319b1d64994802b1828" prot="public" virt="non-virtual"><scope>collector_registerer</scope><name>collector_registerer</name></member>
      <member refid="classcollector__registerer_1aa21a1ca2703bf6bf3427ffc693cde40f" prot="public" virt="non-virtual"><scope>collector_registerer</scope><name>collector_registerer</name></member>
      <member refid="classcollector__registerer_1a014ee9272d4a4b2948cda6054a8100bf" prot="private" virt="non-virtual"><scope>collector_registerer</scope><name>m_registerer</name></member>
      <member refid="classcollector__registerer_1a4ffed7d9fb35245f157db2e38b64fbe9" prot="public" virt="non-virtual"><scope>collector_registerer</scope><name>operator()</name></member>
      <member refid="classcollector__registerer_1aaaa50fcb6c674313829ae64da78883e0" prot="public" virt="non-virtual"><scope>collector_registerer</scope><name>operator=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
